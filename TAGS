
/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/include/timepix.hpp,4107
class Timepix{Timepix14,754
		unsigned char FSR[9][52];FSR76,3655
		unsigned int DACValue[9][18];DACValue79,3701
		std::string DACNames[18];DACNames80,3733
		int DACCodes[13];DACCodes81,3761
		int ChipID_[9];ChipID_82,3781
		std::string ChipLetter[9];ChipLetter83,3799
		int ChipNumber[9];ChipNumber84,3828
		int ChipWaver[9];ChipWaver85,3849
		int ChipType_[9];ChipType_86,3869
		int NumberDefPixel;NumberDefPixel87,3889
		int DefPixel[256][256];DefPixel88,3911
		int IsCounting_;IsCounting_89,3937
		int IKrumBitPos[8], DiscBitPos[8], PreampBitPos[8], BuffAnalogABitPos[8], BuffAnalogBBitPos[8], HistBitPos[8];IKrumBitPos92,3985
		int IKrumBitPos[8], DiscBitPos[8], PreampBitPos[8], BuffAnalogABitPos[8], BuffAnalogBBitPos[8], HistBitPos[8];DiscBitPos92,3985
		int IKrumBitPos[8], DiscBitPos[8], PreampBitPos[8], BuffAnalogABitPos[8], BuffAnalogBBitPos[8], HistBitPos[8];PreampBitPos92,3985
		int IKrumBitPos[8], DiscBitPos[8], PreampBitPos[8], BuffAnalogABitPos[8], BuffAnalogBBitPos[8], HistBitPos[8];BuffAnalogABitPos92,3985
		int IKrumBitPos[8], DiscBitPos[8], PreampBitPos[8], BuffAnalogABitPos[8], BuffAnalogBBitPos[8], HistBitPos[8];BuffAnalogBBitPos92,3985
		int IKrumBitPos[8], DiscBitPos[8], PreampBitPos[8], BuffAnalogABitPos[8], BuffAnalogBBitPos[8], HistBitPos[8];HistBitPos92,3985
		int THLBitPos[10], CoarseBitPos[4];THLBitPos93,4098
		int THLBitPos[10], CoarseBitPos[4];CoarseBitPos93,4098
		int VcasBitPos[8], FBKBitPos[8], GNDBitPos[8], CTPRBitPos[32], THSBitPos[8], BiasLVDSBitPos[8], RefLVDSBitPos[8], ChipIDBitPos[24];VcasBitPos94,4136
		int VcasBitPos[8], FBKBitPos[8], GNDBitPos[8], CTPRBitPos[32], THSBitPos[8], BiasLVDSBitPos[8], RefLVDSBitPos[8], ChipIDBitPos[24];FBKBitPos94,4136
		int VcasBitPos[8], FBKBitPos[8], GNDBitPos[8], CTPRBitPos[32], THSBitPos[8], BiasLVDSBitPos[8], RefLVDSBitPos[8], ChipIDBitPos[24];GNDBitPos94,4136
		int VcasBitPos[8], FBKBitPos[8], GNDBitPos[8], CTPRBitPos[32], THSBitPos[8], BiasLVDSBitPos[8], RefLVDSBitPos[8], ChipIDBitPos[24];CTPRBitPos94,4136
		int VcasBitPos[8], FBKBitPos[8], GNDBitPos[8], CTPRBitPos[32], THSBitPos[8], BiasLVDSBitPos[8], RefLVDSBitPos[8], ChipIDBitPos[24];THSBitPos94,4136
		int VcasBitPos[8], FBKBitPos[8], GNDBitPos[8], CTPRBitPos[32], THSBitPos[8], BiasLVDSBitPos[8], RefLVDSBitPos[8], ChipIDBitPos[24];BiasLVDSBitPos94,4136
		int VcasBitPos[8], FBKBitPos[8], GNDBitPos[8], CTPRBitPos[32], THSBitPos[8], BiasLVDSBitPos[8], RefLVDSBitPos[8], ChipIDBitPos[24];RefLVDSBitPos94,4136
		int VcasBitPos[8], FBKBitPos[8], GNDBitPos[8], CTPRBitPos[32], THSBitPos[8], BiasLVDSBitPos[8], RefLVDSBitPos[8], ChipIDBitPos[24];ChipIDBitPos94,4136
		int SenseDACPos, ExtDACPos, DACCodePos[4];SenseDACPos95,4270
		int SenseDACPos, ExtDACPos, DACCodePos[4];ExtDACPos95,4270
		int SenseDACPos, ExtDACPos, DACCodePos[4];DACCodePos95,4270
		unsigned char P0[9][256][256], P1[9][256][256], Mask[9][256][256], Test[9][256][256], ThrH[9][256][256];P098,4349
		unsigned char P0[9][256][256], P1[9][256][256], Mask[9][256][256], Test[9][256][256], ThrH[9][256][256];P198,4349
		unsigned char P0[9][256][256], P1[9][256][256], Mask[9][256][256], Test[9][256][256], ThrH[9][256][256];Mask98,4349
		unsigned char P0[9][256][256], P1[9][256][256], Mask[9][256][256], Test[9][256][256], ThrH[9][256][256];Test98,4349
		unsigned char P0[9][256][256], P1[9][256][256], Mask[9][256][256], Test[9][256][256], ThrH[9][256][256];ThrH98,4349
		unsigned short NumChips;NumChips99,4456
		unsigned short Preload_global;Preload_global100,4483
		unsigned short Option_global;Option_global101,4516
		unsigned int I2C_global;I2C_global102,4548
		int i2c_result_global;i2c_result_global103,4575
		unsigned short ADC_channel_global;ADC_channel_global104,4600
		unsigned short ADC_alert_global;ADC_alert_global105,4637
		unsigned short ADC_result_global;ADC_result_global106,4672
		unsigned short FADCshutter_global;FADCshutter_global107,4708
		unsigned short FADCtriggered_global;FADCtriggered_global108,4745
		unsigned short ExtraByte_global;ExtraByte_global109,4784

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/include/console.hpp,554
#define _CONSOLE_HPP _CONSOLE_HPP13,752
#define DEFAULT_USER_INPUT_PROMPT DEFAULT_USER_INPUT_PROMPT36,1173
class Console{Console40,1234
    PC pc;pc61,1723
    int ok;              //< some check var to work with pc ok63,1739
    int _nbOfChips;      //< the number of chips one wants to use_nbOfChips64,1800
    int _preload;        //< nb of preload bits - used to fix some bugs_preload65,1866
    HV_FADC_Obj* _hvFadcObj;_hvFadcObj161,4975
    bool _hvFadcObjActive;_hvFadcObjActive162,5004
    const char *_prompt;_prompt165,5100

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/include/const.h,15642
#define CONST_HCONST_H2,16
#define WITH_VME_HARDWARE	WITH_VME_HARDWARE7,128
#define BITFIELDS_MSB_FIRST	BITFIELDS_MSB_FIRST10,222
#define PROGRAM_NAME	PROGRAM_NAME13,281
#define PROGRAM_VERSION	PROGRAM_VERSION14,323
#define PROGRAM_INI_FILE	PROGRAM_INI_FILE15,360
#define MAX_MODULES	MAX_MODULES16,409
#define MAX_CHANNELS	MAX_CHANNELS17,466
#define MAX_GROUPS	MAX_GROUPS18,498
#define TIMER_INTERVAL_NORMAL	TIMER_INTERVAL_NORMAL19,529
#define TIMER_INTERVAL_SPECIAL	TIMER_INTERVAL_SPECIAL20,568
#define MODULE_CONNECT_TIMEOUT	MODULE_CONNECT_TIMEOUT21,608
	uint16_t Word;Word27,851
		uint16_t	Reserved1:2;Reserved129,877
		uint16_t	InputError:1;InputError30,901
		uint16_t	isOn:1;isOn31,926
		uint16_t	isRamping:1;isRamping32,945
		uint16_t	isEmergency:1;isEmergency33,969
		uint16_t	ControlledByCurrent:1;ControlledByCurrent34,995
		uint16_t	ControlledByVoltage:1;ControlledByVoltage35,1029
		uint16_t	Reserved:2;Reserved37,1064
		uint16_t	CurrentBounds:1;CurrentBounds38,1087
		uint16_t	VoltageBounds:1;VoltageBounds39,1115
		uint16_t	ExternalInhibit:1;ExternalInhibit40,1143
		uint16_t	CurrentTrip:1;CurrentTrip41,1173
		uint16_t	CurrentLimit:1;CurrentLimit42,1199
		uint16_t	VoltageLimit:1;VoltageLimit43,1226
	} Bit;Bit44,1253
} ChStatusSTRUCT;ChStatusSTRUCT45,1261
	uint16_t Word;Word48,1296
		uint16_t	Reserved1:2;Reserved150,1322
		uint16_t	EventInputError:1;EventInputError51,1346
		uint16_t	EventOnToOff:1;EventOnToOff52,1376
		uint16_t	EventEndOfRamping:1;EventEndOfRamping53,1403
		uint16_t	EventEmergency:1;EventEmergency54,1435
		uint16_t	EventControlledByCurrent:1;EventControlledByCurrent55,1464
		uint16_t	EventControlledByVoltage:1;EventControlledByVoltage56,1503
		uint16_t	Reserved3:2;Reserved358,1543
		uint16_t	EventCurrentBounds:1;EventCurrentBounds59,1567
		uint16_t	EventVoltageBounds:1;EventVoltageBounds60,1600
		uint16_t	EventExternalInhibit:1;EventExternalInhibit61,1633
		uint16_t	EventCurrentTrip:1;EventCurrentTrip62,1668
		uint16_t	EventCurrentLimit:1;EventCurrentLimit63,1699
		uint16_t	EventVoltageLimit:1;EventVoltageLimit64,1731
	} Bit;Bit65,1763
} ChEventStatusSTRUCT;ChEventStatusSTRUCT66,1771
	uint16_t Word;Word69,1811
		uint16_t	Reserved1:2;Reserved171,1837
		uint16_t	MaskEventInputError:1;MaskEventInputError72,1861
		uint16_t	MaskEventOnToOff:1;MaskEventOnToOff73,1895
		uint16_t	MaskEventEndOfRamping:1;MaskEventEndOfRamping74,1926
		uint16_t	MaskEventEmergency:1;MaskEventEmergency75,1962
		uint16_t	MaskEventControlledByCurrent:1;MaskEventControlledByCurrent76,1995
		uint16_t	MaskEventControlledByVoltage:1;MaskEventControlledByVoltage77,2038
		uint16_t	Reserved3:2;Reserved379,2082
		uint16_t	MaskEventCurrentBounds:1;MaskEventCurrentBounds80,2106
		uint16_t	MaskEventVoltageBounds:1;MaskEventVoltageBounds81,2143
		uint16_t	MaskEventExternalInhibit:1;MaskEventExternalInhibit82,2180
		uint16_t	MaskEventCurrentTrip:1;MaskEventCurrentTrip83,2219
		uint16_t	MaskEventCurrentLimit:1;MaskEventCurrentLimit84,2254
		uint16_t	MaskEventVoltageLimit:1;MaskEventVoltageLimit85,2290
	} Bit;Bit86,2326
} ChEventMaskSTRUCT;ChEventMaskSTRUCT87,2334
	uint16_t Word;Word90,2372
		uint16_t	Reserved1: 3;Reserved192,2398
		uint16_t	setON: 1;setON93,2423
		uint16_t	Reserved2: 1;Reserved294,2444
		uint16_t	setEmergency: 1;setEmergency95,2469
		uint16_t	Reserved3: 4;Reserved396,2497
		uint16_t	setACBND: 1;setACBND97,2522
		uint16_t	setAVBND: 1;setAVBND98,2546
		uint16_t	Reserved4: 4;Reserved499,2570
	} Bit;Bit100,2595
} ChControlSTRUCT;ChControlSTRUCT101,2603
	uint16_t Word;Word108,2826
		uint16_t IsAdjustment:1;IsAdjustment110,2852
		uint16_t IsInterlockOut:1;IsInterlockOut111,2879
		uint16_t IsStop:1;IsStop112,2908
		uint16_t Reserved1:1;Reserved1113,2929
		uint16_t IsServiceNeeded:1;IsServiceNeeded114,2953
		uint16_t IsInputError:1;IsInputError115,2983
		uint16_t IsSpecialMode:1;IsSpecialMode116,3010
		uint16_t IsCommandComplete:1;IsCommandComplete118,3039
		uint16_t IsNoSumError:1;IsNoSumError119,3071
		uint16_t IsNoRamp:1;IsNoRamp120,3098
		uint16_t IsSafetyLoopGood:1;IsSafetyLoopGood121,3121
		uint16_t IsEventActive:1;IsEventActive122,3152
		uint16_t IsModuleGood:1;IsModuleGood123,3180
		uint16_t IsSupplyGood:1;IsSupplyGood124,3207
		uint16_t IsTemperatureGood:1;IsTemperatureGood125,3234
		uint16_t IsKillEnable:1;IsKillEnable126,3266
	} Bit;Bit127,3293
} ModuleStatusSTRUCT;ModuleStatusSTRUCT128,3301
	uint16_t Word;Word131,3340
		uint16_t	SetSpecialMode:1;SetSpecialMode133,3366
		uint16_t	DoRecallSetValues:1;DoRecallSetValues134,3395
		uint16_t	SetStop:1;SetStop135,3427
		uint16_t	SetActionOn:1;SetActionOn136,3449
		uint16_t	Reserved1:2;Reserved1137,3475
		uint16_t	DoClear:1;DoClear138,3499
		uint16_t	Reserved2:1;Reserved2139,3521
		uint16_t	IntLevel0:1;IntLevel0141,3546
		uint16_t	IntLevel1:1;IntLevel1142,3570
		uint16_t	IntLevel2:1;IntLevel2143,3594
		uint16_t	Reserved3:1;Reserved3144,3618
		uint16_t	SetAdjustment:1;SetAdjustment145,3642
		uint16_t	Reserved4:1;Reserved4146,3670
		uint16_t	SetKillEnable:1;SetKillEnable147,3694
		uint16_t	DoSaveSetValues:1;DoSaveSetValues148,3722
	} Bit;Bit149,3752
} ModuleControlSTRUCT;ModuleControlSTRUCT150,3760
	uint16_t Word;Word153,3800
		uint16_t	Reserved1: 1;Reserved1155,3826
		uint16_t	EventRestart: 1;EventRestart156,3851
		uint16_t	Reserved2: 2;Reserved2157,3879
		uint16_t	EventServiceNeeded: 1;EventServiceNeeded158,3904
		uint16_t	EventInputError: 1;EventInputError159,3938
		uint16_t	Reserved3: 4;Reserved3160,3969
		uint16_t	EventSafetyLoopNotGood: 1;EventSafetyLoopNotGood162,3995
		uint16_t	Reserved4: 2;Reserved4163,4033
		uint16_t	EventSupplyNotGood: 1;EventSupplyNotGood164,4058
		uint16_t	EventTemperatureNotGood: 1;EventTemperatureNotGood165,4092
		uint16_t	Reserved5: 1;Reserved5166,4131
		} Bit;Bit167,4156
} ModuleEventStatusSTRUCT;ModuleEventStatusSTRUCT168,4165
	uint16_t Word;Word171,4209
		uint16_t	Reserved1: 1;Reserved1173,4235
		uint16_t	MaskEventRestart: 1;MaskEventRestart174,4260
		uint16_t	Reserved2: 2;Reserved2175,4292
		uint16_t	MaskEventServiceNeeded: 1;MaskEventServiceNeeded176,4317
		uint16_t	MaskEventInputError: 1;MaskEventInputError177,4355
		uint16_t	Reserved3: 4;Reserved3178,4390
		uint16_t	MaskEventSafetyLoopNotGood: 1;MaskEventSafetyLoopNotGood180,4416
		uint16_t	Reserved4: 2;Reserved4181,4458
		uint16_t	MaskEventSupplyNotGood: 1;MaskEventSupplyNotGood182,4483
		uint16_t	MaskEventTemperatureNotGood: 1;MaskEventTemperatureNotGood183,4521
		uint16_t	Reserved5: 1;Reserved5184,4564
	} Bit;Bit185,4589
} ModuleEventMaskSTRUCT;ModuleEventMaskSTRUCT186,4597
		uint16_t	Channel0:1;Channel0194,4835
		uint16_t	Channel1:1;Channel1195,4858
		uint16_t	Channel2:1;Channel2196,4881
		uint16_t	Channel3:1;Channel3197,4904
		uint16_t	Channel4:1;Channel4198,4927
		uint16_t	Channel5:1;Channel5199,4950
		uint16_t	Channel6:1;Channel6200,4973
		uint16_t	Channel7:1;Channel7201,4996
		uint16_t	Channel8:1;Channel8202,5019
		uint16_t	Channel9:1;Channel9203,5042
		uint16_t	Channel10:1;Channel10204,5065
		uint16_t	Channel11:1;Channel11205,5089
		uint16_t	Channel12:1;Channel12206,5113
		uint16_t	Channel13:1;Channel13207,5137
		uint16_t	Channel14:1;Channel14208,5161
		uint16_t	Channel15:1;Channel15209,5185
	} Bit;Bit210,5209
	uint16_t Word;Word211,5217
} GroupMemberSTRUCT1;GroupMemberSTRUCT1212,5233
		uint16_t	Channel16:1;Channel16216,5282
		uint16_t	Channel17:1;Channel17217,5306
		uint16_t	Channel18:1;Channel18218,5330
		uint16_t	Channel19:1;Channel19219,5354
		uint16_t	Channel20:1;Channel20220,5378
		uint16_t	Channel21:1;Channel21221,5402
		uint16_t	Channel22:1;Channel22222,5426
		uint16_t	Channel23:1;Channel23223,5450
		uint16_t	Res:      8;Res224,5474
	} Bit;Bit225,5498
	uint16_t Word;Word226,5506
} GroupMemberSTRUCT2;GroupMemberSTRUCT2227,5522
		uint16_t	MasterChannel:4;MasterChannel234,5695
		uint16_t	Control:4;Control235,5723
		uint16_t	Mode:1;Mode236,5745
		uint16_t	Reserved1:5;Reserved1237,5764
		uint16_t	GroupType:2;GroupType238,5788
	} Bit;Bit239,5812
	uint16_t Word;Word240,5820
} GroupSet1PropertySTRUCT;GroupSet1PropertySTRUCT241,5836
		uint16_t	MasterChannel:5;MasterChannel245,5890
		uint16_t	Reserved1:11;Reserved1246,5918
	} Bit;Bit247,5943
	uint16_t Word;Word248,5951
} GroupSet2PropertySTRUCT;GroupSet2PropertySTRUCT249,5967
		uint16_t	Reserved0:4;Reserved0254,6102
		uint16_t	Item:4;Item255,6126
		uint16_t	Reserved1:6;Reserved1256,6145
		uint16_t	GroupType:2;GroupType257,6169
	} Bit;Bit258,6193
	uint16_t Word;Word259,6201
} GroupStatus1PropertySTRUCT;GroupStatus1PropertySTRUCT260,6217
		uint16_t	Reserved0:4;Reserved0265,6354
		uint16_t	Monitor:4;Monitor266,6378
		uint16_t	Mode:1;Mode267,6400
		uint16_t	Reserved1:3;Reserved1268,6419
		uint16_t	Action:2;Action269,6443
		uint16_t	GroupType:2;GroupType270,6464
	} Bit;Bit271,6488
	uint16_t Word;Word272,6496
} GroupMonitoring1PropertySTRUCT;GroupMonitoring1PropertySTRUCT273,6512
		uint16_t	TimeoutTime:16;TimeoutTime278,6653
	} Bit;Bit279,6680
	uint16_t Word;Word280,6688
} GroupTimeout2PropertySTRUCT;GroupTimeout2PropertySTRUCT281,6704
		uint16_t	TimeoutTime:12;TimeoutTime285,6762
		uint16_t	Action:2;Action286,6789
		uint16_t	GroupType:2;GroupType287,6810
	} Bit;Bit288,6834
	uint16_t Word;Word289,6842
} GroupTimeout1PropertySTRUCT;GroupTimeout1PropertySTRUCT290,6858
#define GROUP_TYPE_SET GROUP_TYPE_SET292,6890
#define GROUP_TYPE_STATUS GROUP_TYPE_STATUS293,6926
#define GROUP_TYPE_MONITOR GROUP_TYPE_MONITOR294,6962
#define GROUP_TYPE_TIMEOUT GROUP_TYPE_TIMEOUT295,6998
#define GROUP_SET_VSET GROUP_SET_VSET297,7035
#define GROUP_SET_ISET GROUP_SET_ISET298,7071
#define GROUP_SET_VILK_MAX GROUP_SET_VILK_MAX299,7107
#define GROUP_SET_IILK_MAX GROUP_SET_IILK_MAX300,7143
#define GROUP_SET_VILK_MIN GROUP_SET_VILK_MIN301,7179
#define GROUP_SET_IILK_MIN GROUP_SET_IILK_MIN302,7215
#define GROUP_SET_SETON GROUP_SET_SETON303,7251
#define GROUP_SET_EMCY GROUP_SET_EMCY304,7287
#define GROUP_SET_CLONE GROUP_SET_CLONE305,7323
#define GROUP_STATUS_ISON GROUP_STATUS_ISON307,7360
#define GROUP_STATUS_ISRAMP GROUP_STATUS_ISRAMP308,7396
#define GROUP_STATUS_ISCC GROUP_STATUS_ISCC309,7432
#define GROUP_STATUS_ISCV GROUP_STATUS_ISCV310,7468
#define GROUP_STATUS_ISIBND GROUP_STATUS_ISIBND311,7504
#define GROUP_STATUS_ISVBND GROUP_STATUS_ISVBND312,7540
#define GROUP_STATUS_ISEINH GROUP_STATUS_ISEINH313,7576
#define GROUP_STATUS_ISTRIP GROUP_STATUS_ISTRIP314,7612
#define GROUP_STATUS_ISILIM GROUP_STATUS_ISILIM315,7648
#define GROUP_STATUS_ISVLIM GROUP_STATUS_ISVLIM316,7684
#define GROUP_MONITOR_ISON GROUP_MONITOR_ISON318,7721
#define GROUP_MONITOR_ISRAMP GROUP_MONITOR_ISRAMP319,7757
#define GROUP_MONITOR_ISCC GROUP_MONITOR_ISCC320,7793
#define GROUP_MONITOR_ISCV GROUP_MONITOR_ISCV321,7829
#define GROUP_MONITOR_ISIBND GROUP_MONITOR_ISIBND322,7865
#define GROUP_MONITOR_ISVBND GROUP_MONITOR_ISVBND323,7901
#define GROUP_MONITOR_ISEINH GROUP_MONITOR_ISEINH324,7937
#define GROUP_MONITOR_ISTRIP GROUP_MONITOR_ISTRIP325,7973
#define GROUP_MONITOR_ISILIM GROUP_MONITOR_ISILIM326,8009
#define GROUP_MONITOR_ISVLIM GROUP_MONITOR_ISVLIM327,8045
#define GROUP_ACTION_NO_ACTION GROUP_ACTION_NO_ACTION329,8082
#define GROUP_ACTION_RAMP_DOWN GROUP_ACTION_RAMP_DOWN330,8118
#define GROUP_ACTION_SHUT_GROUP GROUP_ACTION_SHUT_GROUP331,8154
#define GROUP_ACTION_SHUT_MODULE GROUP_ACTION_SHUT_MODULE332,8190
	GroupMemberSTRUCT2                 MemberList2;MemberList2335,8244
	GroupMemberSTRUCT1                 MemberList1;MemberList1336,8293
		GroupSet2PropertySTRUCT        Set;Set338,8351
		GroupTimeout2PropertySTRUCT    Timeout;Timeout339,8389
		uint16_t                       Word;Word340,8431
	} Type2;Type2341,8470
		GroupSet1PropertySTRUCT        Set;Set343,8489
		GroupStatus1PropertySTRUCT     Status;Status344,8527
		GroupMonitoring1PropertySTRUCT Monitor;Monitor345,8568
		GroupTimeout1PropertySTRUCT    Timeout;Timeout346,8610
		uint16_t                       Word;Word347,8652
	} Type1;Type1348,8691
} GroupSTRUCT;GroupSTRUCT349,8701
	uint16_t Word;Word356,8931
		uint16_t	IsIlkTestLoops0:1;IsIlkTestLoops0358,8957
		uint16_t	IsIlkTestLoops1:1;IsIlkTestLoops1359,8987
		uint16_t	IsIlkTestLoops2:1;IsIlkTestLoops2360,9017
		uint16_t	IsIlkTestLoops3:1;IsIlkTestLoops3361,9047
		uint16_t	Reserved1:4;Reserved1362,9077
		uint16_t	Reserved2:5;Reserved2363,9101
		uint16_t	IsIlkStandby:1;IsIlkStandby364,9125
		uint16_t	IsIlkActive:1;IsIlkActive365,9152
		uint16_t	IsIlkEnabled:1;IsIlkEnabled366,9178
	} Bit;Bit367,9205
} ModuleIlkOutStatusSTRUCT;ModuleIlkOutStatusSTRUCT368,9213
	uint16_t Word;Word371,9258
		uint16_t	doIlkTestLoops0: 1;doIlkTestLoops0373,9284
		uint16_t	doIlkTestLoops1: 1;doIlkTestLoops1374,9315
		uint16_t	doIlkTestLoops2: 1;doIlkTestLoops2375,9346
		uint16_t	doIlkTestLoops3: 1;doIlkTestLoops3376,9377
		uint16_t	Reserved1:1;Reserved1377,9408
		uint16_t	setIlkIset:1;setIlkIset378,9432
		uint16_t	setIlkCLim:1;setIlkCLim379,9457
		uint16_t	setIlkVBnds:1;setIlkVBnds380,9482
		uint16_t	setIlkVLim:1;setIlkVLim381,9508
		uint16_t	setIlkCBnds:1;setIlkCBnds382,9533
		uint16_t	Reserved2:4;Reserved2383,9559
		uint16_t	clrIlkRegs:1;clrIlkRegs384,9583
		uint16_t	setIlkEnable:1;setIlkEnable385,9608
	} Bit;Bit386,9635
} ModuleIlkOutControlSTRUCT;ModuleIlkOutControlSTRUCT387,9643
#define MODULE_ILKOUT_CONTROL_DO_TEST_LOOPS	MODULE_ILKOUT_CONTROL_DO_TEST_LOOPS389,9673
#define MODULE_ILKOUT_CONTROL_TEST_ISET	MODULE_ILKOUT_CONTROL_TEST_ISET390,9720
#define MODULE_ILKOUT_CONTROL_TEST_CLIM	MODULE_ILKOUT_CONTROL_TEST_CLIM391,9764
#define MODULE_ILKOUT_CONTROL_TEST_VBNDS	MODULE_ILKOUT_CONTROL_TEST_VBNDS392,9808
#define MODULE_ILKOUT_CONTROL_TEST_VLIM	MODULE_ILKOUT_CONTROL_TEST_VLIM393,9852
#define MODULE_ILKOUT_CONTROL_CLEAR_REGS	MODULE_ILKOUT_CONTROL_CLEAR_REGS394,9896
#define MODULE_ILKOUT_CONTROL_ENABLE	MODULE_ILKOUT_CONTROL_ENABLE395,9941
	uint16_t Word;Word398,10000
		uint16_t	IlkChn0:1;IlkChn0400,10026
		uint16_t	IlkChn1:1;IlkChn1401,10048
		uint16_t	IlkChn2:1;IlkChn2402,10070
		uint16_t	IlkChn3:1;IlkChn3403,10092
		uint16_t	IlkChn4:1;IlkChn4404,10114
		uint16_t	IsIlkIset:1;IsIlkIset405,10136
		uint16_t	IsIlkCLim:1;IsIlkCLim406,10160
		uint16_t	IsIlkVBnds:1;IsIlkVBnds407,10184
		uint16_t	IsIlkVLim:1;IsIlkVLim408,10209
		uint16_t	IsIlkIBnds:1;IsIlkIBnds409,10233
		uint16_t	Reserved1:4;Reserved1410,10258
		uint16_t	IsIlkTest:1;IsIlkTest411,10282
		uint16_t	Reserved2:1;Reserved2412,10306
	} Bit;Bit413,10330
} ModuleIlkLastTriggerSTRUCT;ModuleIlkLastTriggerSTRUCT414,10338
	uint16_t Word;Word417,10385
		uint16_t Chn0: 1;Chn0419,10411
		uint16_t Chn1: 1;Chn1420,10431
		uint16_t Chn2: 1;Chn2421,10451
		uint16_t Chn3: 1;Chn3422,10471
		uint16_t Chn4: 1;Chn4423,10491
		uint16_t Chn5: 1;Chn5424,10511
		uint16_t Chn6: 1;Chn6425,10531
		uint16_t Chn7: 1;Chn7426,10551
		uint16_t Chn8: 1;Chn8427,10571
		uint16_t Chn9: 1;Chn9428,10591
		uint16_t Chn10: 1;Chn10429,10611
		uint16_t Chn11: 1;Chn11430,10632
		uint16_t Chn12: 1;Chn12431,10653
		uint16_t Chn13: 1;Chn13432,10674
		uint16_t Chn14: 1;Chn14433,10695
		uint16_t Chn15: 1;Chn15434,10716
	} Bit;Bit435,10737
} ModuleChannelSTRUCT;ModuleChannelSTRUCT436,10745

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/include/DeviceVME.h,184
#define DEVICEVME_H_DEVICEVME_H_9,113
namespace vme {vme21,223
class DeviceVME {DeviceVME38,313
	const int BASE_ADDR;BASE_ADDR63,837
	CVmUsb *m_Controller;m_Controller65,861

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/include/header.hpp,252
  #define MAC_ADDR MAC_ADDR24,906
	#define IP_ADRESSE IP_ADRESSE29,1108
	#define PLen PLen36,1361
	#define PQueue PQueue39,1806
	#define DEBUG DEBUG49,2110
	#define PERFORMANCE PERFORMANCE57,2271
	#define TALKATIVNESS TALKATIVNESS65,2389

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/include/vmemodule.h,25030
#define VMEMODULE_HVMEMODULE_H2,20
#define ISEG_DEFAULT_BASE_ADDRESS	ISEG_DEFAULT_BASE_ADDRESS12,130
#define ISEG_VENDOR_ID	ISEG_VENDOR_ID13,176
#define VHS_ADDRESS_SPACE_LENGTH	VHS_ADDRESS_SPACE_LENGTH14,218
#define VDS_ADDRESS_SPACE_LENGTH	VDS_ADDRESS_SPACE_LENGTH15,263
#define ADDRESS_MODIFIER	ADDRESS_MODIFIER16,308
#define V12C0	V12C019,371
#define V24D0	V24D020,445
class CVmeModuleCVmeModule22,518
	bool   IsConnected(void) { GetModuleDeviceClass(); return VendorID == ISEG_VENDOR_ID; }IsConnected28,623
	uint16_t GetModuleBaseAddress() { return BaseAddress; }GetModuleBaseAddress37,970
	void   ClearModuleEventStatus(void) { SetModuleEventStatus(0xFFFFFFFF); }ClearModuleEventStatus56,1590
	void   ClearChannelEventStatus(int channel) { SetChannelEventStatus(channel, 0xFFFFFFFF); }ClearChannelEventStatus95,3028
	uint32_t VendorID;VendorID182,6412
	uint16_t BaseAddress;BaseAddress183,6432
	int    DeviceClass;DeviceClass184,6455
	uint16_t ChannelOFFSET[MAX_CHANNELS];ChannelOFFSET186,6477
	uint16_t VoltageMaxSetOFFSET[MAX_CHANNELS];VoltageMaxSetOFFSET187,6516
	uint16_t CurrentMaxSetOFFSET[MAX_CHANNELS];CurrentMaxSetOFFSET188,6561
	uint16_t FlexGroupOFFSET[MAX_GROUPS];FlexGroupOFFSET189,6606
	int    ChannelNumber;ChannelNumber191,6646
	CVmeController *VmeController;VmeController193,6670
	enum { vf_volt, vf_kilovolt } vfUnit;vf_volt195,6703
	enum { vf_volt, vf_kilovolt } vfUnit;vf_kilovolt195,6703
	enum { vf_volt, vf_kilovolt } vfUnit;vfUnit195,6703
	int  vfPrecision;vfPrecision196,6742
	int  vfFieldWidth;vfFieldWidth197,6761
	enum { cf_nanoamp, cf_microamp, cf_milliamp, cf_ampere } cfUnit;cf_nanoamp198,6781
	enum { cf_nanoamp, cf_microamp, cf_milliamp, cf_ampere } cfUnit;cf_microamp198,6781
	enum { cf_nanoamp, cf_microamp, cf_milliamp, cf_ampere } cfUnit;cf_milliamp198,6781
	enum { cf_nanoamp, cf_microamp, cf_milliamp, cf_ampere } cfUnit;cf_ampere198,6781
	enum { cf_nanoamp, cf_microamp, cf_milliamp, cf_ampere } cfUnit;cfUnit198,6781
	int  cfPrecision;cfPrecision199,6847
	int  cfFieldWidth;cfFieldWidth200,6866
#define SPECIALCONTROL_COMMAND_STANDBY	SPECIALCONTROL_COMMAND_STANDBY204,6971
#define SPECIALCONTROL_COMMAND_DATASENT	SPECIALCONTROL_COMMAND_DATASENT205,7021
#define SPECIALCONTROL_COMMAND_WRITE	SPECIALCONTROL_COMMAND_WRITE206,7072
#define SPECIALCONTROL_COMMAND_COMPARE	SPECIALCONTROL_COMMAND_COMPARE207,7120
#define SPECIALCONTROL_COMMAND_COMPAREAFTERWRITESTATE	SPECIALCONTROL_COMMAND_COMPAREAFTERWRITESTATE208,7170
#define SPECIALCONTROL_COMMAND_POSTFLASH	SPECIALCONTROL_COMMAND_POSTFLASH209,7231
#define SPECIALCONTROL_COMMAND_ENDSPECIAL	SPECIALCONTROL_COMMAND_ENDSPECIAL210,7282
#define SPECIALCONTROL_COMMAND_RESTART	SPECIALCONTROL_COMMAND_RESTART211,7334
#define SPECIALCONTROL_COMMAND_SYNC	SPECIALCONTROL_COMMAND_SYNC212,7384
#define SPECIALCONTROL_COMMAND_LIVE_INSERTION	SPECIALCONTROL_COMMAND_LIVE_INSERTION213,7432
#define SPECIALCONTROL_COMMAND_FPGA_UPDATE	SPECIALCONTROL_COMMAND_FPGA_UPDATE214,7487
#define SPECIALCONTROL_COMMAND_S12X_UPDATE	SPECIALCONTROL_COMMAND_S12X_UPDATE215,7540
#define SPECIALCONTROL_COMMAND_EEPROM_ACCESS	SPECIALCONTROL_COMMAND_EEPROM_ACCESS217,7594
#define SPECIALCONTROL_STATUS_READY	SPECIALCONTROL_STATUS_READY219,7649
#define SPECIALCONTROL_STATUS_BUSY	SPECIALCONTROL_STATUS_BUSY220,7697
#define SPECIALCONTROL_STATUS_ACKNOWLEDGE	SPECIALCONTROL_STATUS_ACKNOWLEDGE221,7744
#define SPECIALCONTROL_STATUS_ERROR	SPECIALCONTROL_STATUS_ERROR222,7796
#define SPECIALCONTROL_STATUS_ERROR_CHKSUM	SPECIALCONTROL_STATUS_ERROR_CHKSUM223,7844
#define SPECIALCONTROL_STATUS_ERROR_COMPARE	SPECIALCONTROL_STATUS_ERROR_COMPARE224,7897
#define SPECIALCONTROL_STATUS_ERROR_HVON	SPECIALCONTROL_STATUS_ERROR_HVON225,7951
#define SPECIALCONTROL_STATUS_NOADDR	SPECIALCONTROL_STATUS_NOADDR226,8002
#define SPECIALCONTROL_STATUS_WRONGADDR	SPECIALCONTROL_STATUS_WRONGADDR227,8050
#define SPECIALCONTROL_STATUS_DIFF	SPECIALCONTROL_STATUS_DIFF228,8101
#define VhsModuleStatusOFFSET	VhsModuleStatusOFFSET231,8229
#define VhsModuleControlOFFSET	VhsModuleControlOFFSET232,8266
#define VhsModuleEventStatusOFFSET	VhsModuleEventStatusOFFSET233,8304
#define VhsModuleEventMaskOFFSET	VhsModuleEventMaskOFFSET234,8345
#define VhsModuleEventChannelStatusOFFSET	VhsModuleEventChannelStatusOFFSET235,8384
#define VhsModuleEventChannelMaskOFFSET	VhsModuleEventChannelMaskOFFSET236,8430
#define VhsModuleEventGroupStatusOFFSET	VhsModuleEventGroupStatusOFFSET237,8476
#define VhsModuleEventGroupMaskOFFSET	VhsModuleEventGroupMaskOFFSET238,8522
#define VhsVoltageRampSpeedOFFSET	VhsVoltageRampSpeedOFFSET240,8567
#define VhsCurrentRampSpeedOFFSET	VhsCurrentRampSpeedOFFSET241,8608
#define VhsVoltageMaxOFFSET	VhsVoltageMaxOFFSET242,8649
#define VhsCurrentMaxOFFSET	VhsCurrentMaxOFFSET243,8686
#define VhsSupplyP5OFFSET	VhsSupplyP5OFFSET244,8723
#define VhsSupplyP12OFFSET	VhsSupplyP12OFFSET245,8758
#define VhsSupplyN12OFFSET	VhsSupplyN12OFFSET246,8794
#define VhsTemperatureOFFSET	VhsTemperatureOFFSET247,8830
#define VhsSerialNumberOFFSET	VhsSerialNumberOFFSET249,8868
#define VhsFirmwareReleaseOFFSET	VhsFirmwareReleaseOFFSET250,8906
#define VhsPlacedChannelsOFFSET	VhsPlacedChannelsOFFSET251,8946
#define VhsDeviceClassOFFSET	VhsDeviceClassOFFSET252,8986
#define VhsModuleIlkOutStatusOFFSET	VhsModuleIlkOutStatusOFFSET254,9024
#define VhsModuleIlkOutControlOFFSET	VhsModuleIlkOutControlOFFSET255,9067
#define VhsModuleIlkCountOFFSET	VhsModuleIlkCountOFFSET256,9110
#define VhsModuleIlkLastTriggerOFFSET	VhsModuleIlkLastTriggerOFFSET257,9150
#define VhsModuleIlkChnActualActiveOFFSET	VhsModuleIlkChnActualActiveOFFSET258,9194
#define VhsModuleIlkChnEverTriggeredOFFSET	VhsModuleIlkChnEverTriggeredOFFSET259,9241
#define VhsRestartTimeOFFSET	VhsRestartTimeOFFSET261,9290
#define VhsADCSamplesPerSecondOFFSET	VhsADCSamplesPerSecondOFFSET262,9327
#define VhsDigitalFilterOFFSET	VhsDigitalFilterOFFSET263,9370
#define VhsVendorIdOFFSET	VhsVendorIdOFFSET264,9409
#define VhsChannel00OFFSET	VhsChannel00OFFSET266,9445
#define VhsChannel01OFFSET	VhsChannel01OFFSET267,9485
#define VhsChannel02OFFSET	VhsChannel02OFFSET268,9544
#define VhsChannel03OFFSET	VhsChannel03OFFSET269,9603
#define VhsChannel04OFFSET	VhsChannel04OFFSET270,9662
#define VhsChannel05OFFSET	VhsChannel05OFFSET271,9721
#define VhsChannel06OFFSET	VhsChannel06OFFSET272,9780
#define VhsChannel07OFFSET	VhsChannel07OFFSET273,9839
#define VhsChannel08OFFSET	VhsChannel08OFFSET274,9898
#define VhsChannel09OFFSET	VhsChannel09OFFSET275,9957
#define VhsChannel10OFFSET	VhsChannel10OFFSET276,10016
#define VhsChannel11OFFSET	VhsChannel11OFFSET277,10075
#define VhsChannelStatusOFFSET	VhsChannelStatusOFFSET279,10135
#define VhsChannelControlOFFSET	VhsChannelControlOFFSET280,10173
#define VhsChannelEventStatusOFFSET	VhsChannelEventStatusOFFSET281,10212
#define VhsChannelEventMaskOFFSET	VhsChannelEventMaskOFFSET282,10254
#define VhsChannelVoltageSetOFFSET	VhsChannelVoltageSetOFFSET283,10294
#define VhsChannelCurrentSetOFFSET	VhsChannelCurrentSetOFFSET284,10335
#define VhsChannelVoltageMeasureOFFSET	VhsChannelVoltageMeasureOFFSET285,10377
#define VhsChannelCurrentMeasureOFFSET	VhsChannelCurrentMeasureOFFSET286,10422
#define VhsChannelVoltageBoundsOFFSET	VhsChannelVoltageBoundsOFFSET287,10467
#define VhsChannelVoltageIlkMaxSetOFFSET	VhsChannelVoltageIlkMaxSetOFFSET288,10511
#define VhsChannelCurrentBoundsOFFSET	VhsChannelCurrentBoundsOFFSET289,10557
#define VhsChannelCurrentIlkMaxSetOFFSET	VhsChannelCurrentIlkMaxSetOFFSET290,10601
#define VhsChannelVoltageNominalOFFSET	VhsChannelVoltageNominalOFFSET291,10647
#define VhsChannelCurrentNominalOFFSET	VhsChannelCurrentNominalOFFSET292,10692
#define VhsChannelVoltageIlkMinSetOFFSET	VhsChannelVoltageIlkMinSetOFFSET293,10737
#define VhsChannelCurrentIlkMinSetOFFSET	VhsChannelCurrentIlkMinSetOFFSET294,10783
#define VhsFixGroupOFFSET	VhsFixGroupOFFSET296,10830
#define VhsSetVoltageAllChannelsOFFSET	VhsSetVoltageAllChannelsOFFSET297,10869
#define VhsSetCurrentAllChannelsOFFSET	VhsSetCurrentAllChannelsOFFSET298,10929
#define VhsSetVoltageBoundsAllChannelsOFFSET	VhsSetVoltageBoundsAllChannelsOFFSET299,11006
#define VhsSetCurrentBoundsAllChannelsOFFSET	VhsSetCurrentBoundsAllChannelsOFFSET300,11087
#define VhsSetEmergencyAllChannelsOFFSET	VhsSetEmergencyAllChannelsOFFSET301,11174
#define VhsSetOnOffAllChannelsOFFSET	VhsSetOnOffAllChannelsOFFSET302,11258
#define VhsSetVoltageMaxAllChannelsOFFSET	VhsSetVoltageMaxAllChannelsOFFSET303,11335
#define VhsSetCurrentMaxAllChannelsOFFSET	VhsSetCurrentMaxAllChannelsOFFSET304,11412
#define VhsFlexGroupOFFSET	VhsFlexGroupOFFSET306,11495
#define VhsFlexGroupMemberOFFSET	VhsFlexGroupMemberOFFSET307,11535
#define VhsFlexGroupTypeOFFSET	VhsFlexGroupTypeOFFSET308,11574
#define VhsFlexGroup00OFFSET	VhsFlexGroup00OFFSET309,11612
#define VhsFlexGroup01OFFSET	VhsFlexGroup01OFFSET310,11665
#define VhsFlexGroup02OFFSET	VhsFlexGroup02OFFSET311,11724
#define VhsFlexGroup03OFFSET	VhsFlexGroup03OFFSET312,11783
#define VhsFlexGroup04OFFSET	VhsFlexGroup04OFFSET313,11842
#define VhsFlexGroup05OFFSET	VhsFlexGroup05OFFSET314,11901
#define VhsFlexGroup06OFFSET	VhsFlexGroup06OFFSET315,11960
#define VhsFlexGroup07OFFSET	VhsFlexGroup07OFFSET316,12019
#define VhsFlexGroup08OFFSET	VhsFlexGroup08OFFSET317,12078
#define VhsFlexGroup09OFFSET	VhsFlexGroup09OFFSET318,12137
#define VhsFlexGroup10OFFSET	VhsFlexGroup10OFFSET319,12196
#define VhsFlexGroup11OFFSET	VhsFlexGroup11OFFSET320,12255
#define VhsFlexGroup12OFFSET	VhsFlexGroup12OFFSET321,12314
#define VhsFlexGroup13OFFSET	VhsFlexGroup13OFFSET322,12373
#define VhsFlexGroup14OFFSET	VhsFlexGroup14OFFSET323,12432
#define VhsFlexGroup15OFFSET	VhsFlexGroup15OFFSET324,12491
#define VhsFlexGroup16OFFSET	VhsFlexGroup16OFFSET325,12550
#define VhsFlexGroup17OFFSET	VhsFlexGroup17OFFSET326,12609
#define VhsFlexGroup18OFFSET	VhsFlexGroup18OFFSET327,12668
#define VhsFlexGroup19OFFSET	VhsFlexGroup19OFFSET328,12727
#define VhsFlexGroup20OFFSET	VhsFlexGroup20OFFSET329,12786
#define VhsFlexGroup21OFFSET	VhsFlexGroup21OFFSET330,12845
#define VhsFlexGroup22OFFSET	VhsFlexGroup22OFFSET331,12904
#define VhsFlexGroup23OFFSET	VhsFlexGroup23OFFSET332,12963
#define VhsFlexGroup24OFFSET	VhsFlexGroup24OFFSET333,13022
#define VhsFlexGroup25OFFSET	VhsFlexGroup25OFFSET334,13081
#define VhsFlexGroup26OFFSET	VhsFlexGroup26OFFSET335,13140
#define VhsFlexGroup27OFFSET	VhsFlexGroup27OFFSET336,13199
#define VhsFlexGroup28OFFSET	VhsFlexGroup28OFFSET337,13258
#define VhsFlexGroup29OFFSET	VhsFlexGroup29OFFSET338,13317
#define VhsFlexGroup30OFFSET	VhsFlexGroup30OFFSET339,13376
#define VhsFlexGroup31OFFSET	VhsFlexGroup31OFFSET340,13435
#define VhsVoltageMaxSet00OFFSET	VhsVoltageMaxSet00OFFSET343,13518
#define VhsVoltageMaxSet01OFFSET	VhsVoltageMaxSet01OFFSET344,13561
#define VhsVoltageMaxSet02OFFSET	VhsVoltageMaxSet02OFFSET345,13627
#define VhsVoltageMaxSet03OFFSET	VhsVoltageMaxSet03OFFSET346,13693
#define VhsVoltageMaxSet04OFFSET	VhsVoltageMaxSet04OFFSET347,13759
#define VhsVoltageMaxSet05OFFSET	VhsVoltageMaxSet05OFFSET348,13825
#define VhsVoltageMaxSet06OFFSET	VhsVoltageMaxSet06OFFSET349,13891
#define VhsVoltageMaxSet07OFFSET	VhsVoltageMaxSet07OFFSET350,13957
#define VhsVoltageMaxSet08OFFSET	VhsVoltageMaxSet08OFFSET351,14023
#define VhsVoltageMaxSet09OFFSET	VhsVoltageMaxSet09OFFSET352,14089
#define VhsVoltageMaxSet10OFFSET	VhsVoltageMaxSet10OFFSET353,14155
#define VhsVoltageMaxSet11OFFSET	VhsVoltageMaxSet11OFFSET354,14221
#define VhsCurrentMaxSet00OFFSET	VhsCurrentMaxSet00OFFSET357,14311
#define VhsCurrentMaxSet01OFFSET	VhsCurrentMaxSet01OFFSET358,14354
#define VhsCurrentMaxSet02OFFSET	VhsCurrentMaxSet02OFFSET359,14420
#define VhsCurrentMaxSet03OFFSET	VhsCurrentMaxSet03OFFSET360,14486
#define VhsCurrentMaxSet04OFFSET	VhsCurrentMaxSet04OFFSET361,14552
#define VhsCurrentMaxSet05OFFSET	VhsCurrentMaxSet05OFFSET362,14618
#define VhsCurrentMaxSet06OFFSET	VhsCurrentMaxSet06OFFSET363,14684
#define VhsCurrentMaxSet07OFFSET	VhsCurrentMaxSet07OFFSET364,14750
#define VhsCurrentMaxSet08OFFSET	VhsCurrentMaxSet08OFFSET365,14816
#define VhsCurrentMaxSet09OFFSET	VhsCurrentMaxSet09OFFSET366,14882
#define VhsCurrentMaxSet10OFFSET	VhsCurrentMaxSet10OFFSET367,14948
#define VhsCurrentMaxSet11OFFSET	VhsCurrentMaxSet11OFFSET368,15014
#define VhsNewBaseAddressOFFSET	VhsNewBaseAddressOFFSET370,15081
#define VhsNewBaseAddressXorOFFSET	VhsNewBaseAddressXorOFFSET371,15125
#define VhsOldBaseAddressOFFSET	VhsOldBaseAddressOFFSET372,15171
#define VhsNewBaseAddressAcceptedOFFSET	VhsNewBaseAddressAcceptedOFFSET373,15215
#define VhsSpecialControlStatusOFFSET	VhsSpecialControlStatusOFFSET374,15265
#define VhsSpecialControlCommandOFFSET	VhsSpecialControlCommandOFFSET375,15313
#define VhsSpecialControlPageOFFSET	VhsSpecialControlPageOFFSET376,15362
#define VhsSpecialControlAddressOFFSET	VhsSpecialControlAddressOFFSET377,15409
#define VhsSpecialControlReadDataOFFSET	VhsSpecialControlReadDataOFFSET378,15458
#define VhsSpecialControlWriteDataOFFSET	VhsSpecialControlWriteDataOFFSET379,15508
#define VdsModuleStatusOFFSET	VdsModuleStatusOFFSET382,15639
#define VdsModuleEventStatusOFFSET	VdsModuleEventStatusOFFSET383,15676
#define VdsModuleEventMaskOFFSET	VdsModuleEventMaskOFFSET384,15717
#define VdsModuleControlOFFSET	VdsModuleControlOFFSET385,15756
#define VdsModuleEventChannelStatusOFFSET	VdsModuleEventChannelStatusOFFSET387,15796
#define VdsModuleEventChannelMaskOFFSET	VdsModuleEventChannelMaskOFFSET388,15843
#define VdsModuleEventGroupStatusOFFSET	VdsModuleEventGroupStatusOFFSET389,15889
#define VdsModuleEventGroupMaskOFFSET	VdsModuleEventGroupMaskOFFSET390,15935
#define VdsVoltageRampSpeedOFFSET	VdsVoltageRampSpeedOFFSET392,15980
#define VdsCurrentRampSpeedOFFSET	VdsCurrentRampSpeedOFFSET393,16021
#define VdsVoltageMaxOFFSET	VdsVoltageMaxOFFSET394,16062
#define VdsCurrentMaxOFFSET	VdsCurrentMaxOFFSET395,16099
#define VdsSerialNumberOFFSET	VdsSerialNumberOFFSET396,16136
#define VdsFirmwareReleaseOFFSET	VdsFirmwareReleaseOFFSET397,16174
#define VdsPlacedChannelOFFSET	VdsPlacedChannelOFFSET398,16214
#define VdsChannelNumberOFFSET	VdsChannelNumberOFFSET399,16253
#define VdsDeviceClassOFFSET	VdsDeviceClassOFFSET400,16292
#define VdsSupplyP5OFFSET	VdsSupplyP5OFFSET401,16329
#define VdsSupplyP12OFFSET	VdsSupplyP12OFFSET402,16364
#define VdsSupplyN12OFFSET	VdsSupplyN12OFFSET403,16400
#define VdsTemperatureOFFSET	VdsTemperatureOFFSET404,16436
#define VdsRestartTimeOFFSET	VdsRestartTimeOFFSET405,16473
#define VdsADCSamplesPerSecondOFFSET	VdsADCSamplesPerSecondOFFSET406,16510
#define VdsDigitalFilterOFFSET	VdsDigitalFilterOFFSET407,16553
#define VdsVendorIdOFFSET	VdsVendorIdOFFSET408,16592
#define VdsNewBaseAddressOFFSET	VdsNewBaseAddressOFFSET410,16628
#define VdsNewBaseAddressXorOFFSET	VdsNewBaseAddressXorOFFSET411,16672
#define VdsOldBaseAddressOFFSET	VdsOldBaseAddressOFFSET412,16718
#define VdsNewBaseAddressAcceptedOFFSET	VdsNewBaseAddressAcceptedOFFSET413,16762
#define VdsSpecialControlStatusOFFSET	VdsSpecialControlStatusOFFSET414,16812
#define VdsSpecialControlCommandOFFSET	VdsSpecialControlCommandOFFSET415,16860
#define VdsSpecialControlPageOFFSET	VdsSpecialControlPageOFFSET418,16934
#define VdsSpecialControlAddressOFFSET	VdsSpecialControlAddressOFFSET419,16981
#define VdsSpecialControlReadDataOFFSET	VdsSpecialControlReadDataOFFSET420,17030
#define VdsSpecialControlWriteDataOFFSET	VdsSpecialControlWriteDataOFFSET421,17080
#define VdsModuleIlkOutStatusOFFSET	VdsModuleIlkOutStatusOFFSET423,17131
#define VdsModuleIlkOutControlOFFSET	VdsModuleIlkOutControlOFFSET424,17178
#define VdsModuleIlkCountOFFSET	VdsModuleIlkCountOFFSET425,17225
#define VdsModuleIlkLastTriggerOFFSET	VdsModuleIlkLastTriggerOFFSET426,17269
#define VdsModuleIlkChnActualActiveOFFSET	VdsModuleIlkChnActualActiveOFFSET427,17317
#define VdsModuleIlkChnEverTriggeredOFFSET	VdsModuleIlkChnEverTriggeredOFFSET428,17368
#define VdsChannel00OFFSET	VdsChannel00OFFSET430,17421
#define VdsChannel01OFFSET	VdsChannel01OFFSET431,17461
#define VdsChannel02OFFSET	VdsChannel02OFFSET432,17520
#define VdsChannel03OFFSET	VdsChannel03OFFSET433,17579
#define VdsChannel04OFFSET	VdsChannel04OFFSET434,17638
#define VdsChannel05OFFSET	VdsChannel05OFFSET435,17697
#define VdsChannel06OFFSET	VdsChannel06OFFSET436,17756
#define VdsChannel07OFFSET	VdsChannel07OFFSET437,17815
#define VdsChannel08OFFSET	VdsChannel08OFFSET438,17874
#define VdsChannel09OFFSET	VdsChannel09OFFSET439,17933
#define VdsChannel10OFFSET	VdsChannel10OFFSET440,17992
#define VdsChannel11OFFSET	VdsChannel11OFFSET441,18051
#define VdsChannel12OFFSET	VdsChannel12OFFSET442,18110
#define VdsChannel13OFFSET	VdsChannel13OFFSET443,18169
#define VdsChannel14OFFSET	VdsChannel14OFFSET444,18228
#define VdsChannel15OFFSET	VdsChannel15OFFSET445,18287
#define VdsChannel16OFFSET	VdsChannel16OFFSET446,18346
#define VdsChannel17OFFSET	VdsChannel17OFFSET447,18405
#define VdsChannel18OFFSET	VdsChannel18OFFSET448,18464
#define VdsChannel19OFFSET	VdsChannel19OFFSET449,18523
#define VdsChannel20OFFSET	VdsChannel20OFFSET450,18582
#define VdsChannel21OFFSET	VdsChannel21OFFSET451,18641
#define VdsChannel22OFFSET	VdsChannel22OFFSET452,18700
#define VdsChannel23OFFSET	VdsChannel23OFFSET453,18759
#define VdsChannelStatusOFFSET	VdsChannelStatusOFFSET455,18819
#define VdsChannelEventStatusOFFSET	VdsChannelEventStatusOFFSET456,18857
#define VdsChannelEventMaskOFFSET	VdsChannelEventMaskOFFSET457,18899
#define VdsChannelControlOFFSET	VdsChannelControlOFFSET458,18939
#define VdsChannelVoltageSetOFFSET	VdsChannelVoltageSetOFFSET460,18980
#define VdsChannelCurrentSetOFFSET	VdsChannelCurrentSetOFFSET461,19022
#define VdsChannelVoltageMeasureOFFSET	VdsChannelVoltageMeasureOFFSET462,19064
#define VdsChannelCurrentMeasureOFFSET	VdsChannelCurrentMeasureOFFSET463,19109
#define VdsChannelVoltageIlkMaxSetOFFSET	VdsChannelVoltageIlkMaxSetOFFSET464,19154
#define VdsChannelVoltageIlkMinSetOFFSET	VdsChannelVoltageIlkMinSetOFFSET465,19200
#define VdsChannelCurrentIlkMaxSetOFFSET	VdsChannelCurrentIlkMaxSetOFFSET466,19246
#define VdsChannelCurrentIlkMinSetOFFSET	VdsChannelCurrentIlkMinSetOFFSET467,19292
#define VdsChannelVoltageNominalOFFSET	VdsChannelVoltageNominalOFFSET468,19338
#define VdsChannelCurrentNominalOFFSET	VdsChannelCurrentNominalOFFSET469,19383
#define VdsAddrFixGroupsOFFSET	VdsAddrFixGroupsOFFSET471,19429
#define VdsFlexGroupOFFSET	VdsFlexGroupOFFSET473,19473
#define VdsFlexGroupMember2OFFSET	VdsFlexGroupMember2OFFSET474,19513
#define VdsFlexGroupMember1OFFSET	VdsFlexGroupMember1OFFSET475,19553
#define VdsFlexGroupType2OFFSET	VdsFlexGroupType2OFFSET476,19593
#define VdsFlexGroupType1OFFSET	VdsFlexGroupType1OFFSET477,19632
#define VdsFlexGroup00OFFSET	VdsFlexGroup00OFFSET478,19671
#define VdsFlexGroup01OFFSET	VdsFlexGroup01OFFSET479,19724
#define VdsFlexGroup02OFFSET	VdsFlexGroup02OFFSET480,19783
#define VdsFlexGroup03OFFSET	VdsFlexGroup03OFFSET481,19842
#define VdsFlexGroup04OFFSET	VdsFlexGroup04OFFSET482,19901
#define VdsFlexGroup05OFFSET	VdsFlexGroup05OFFSET483,19960
#define VdsFlexGroup06OFFSET	VdsFlexGroup06OFFSET484,20019
#define VdsFlexGroup07OFFSET	VdsFlexGroup07OFFSET485,20078
#define VdsFlexGroup08OFFSET	VdsFlexGroup08OFFSET486,20137
#define VdsFlexGroup09OFFSET	VdsFlexGroup09OFFSET487,20196
#define VdsFlexGroup10OFFSET	VdsFlexGroup10OFFSET488,20255
#define VdsFlexGroup11OFFSET	VdsFlexGroup11OFFSET489,20314
#define VdsFlexGroup12OFFSET	VdsFlexGroup12OFFSET490,20373
#define VdsFlexGroup13OFFSET	VdsFlexGroup13OFFSET491,20432
#define VdsFlexGroup14OFFSET	VdsFlexGroup14OFFSET492,20491
#define VdsFlexGroup15OFFSET	VdsFlexGroup15OFFSET493,20550
#define VdsFlexGroup16OFFSET	VdsFlexGroup16OFFSET494,20609
#define VdsFlexGroup17OFFSET	VdsFlexGroup17OFFSET495,20668
#define VdsFlexGroup18OFFSET	VdsFlexGroup18OFFSET496,20727
#define VdsFlexGroup19OFFSET	VdsFlexGroup19OFFSET497,20786
#define VdsFlexGroup20OFFSET	VdsFlexGroup20OFFSET498,20845
#define VdsFlexGroup21OFFSET	VdsFlexGroup21OFFSET499,20904
#define VdsFlexGroup22OFFSET	VdsFlexGroup22OFFSET500,20963
#define VdsFlexGroup23OFFSET	VdsFlexGroup23OFFSET501,21022
#define VdsFlexGroup24OFFSET	VdsFlexGroup24OFFSET502,21081
#define VdsFlexGroup25OFFSET	VdsFlexGroup25OFFSET503,21140
#define VdsFlexGroup26OFFSET	VdsFlexGroup26OFFSET504,21199
#define VdsFlexGroup27OFFSET	VdsFlexGroup27OFFSET505,21258
#define VdsFlexGroup28OFFSET	VdsFlexGroup28OFFSET506,21317
#define VdsFlexGroup29OFFSET	VdsFlexGroup29OFFSET507,21376
#define VdsFlexGroup30OFFSET	VdsFlexGroup30OFFSET508,21435
#define VdsFlexGroup31OFFSET	VdsFlexGroup31OFFSET509,21494
#define VdsVoltageMaxSet00OFFSET	VdsVoltageMaxSet00OFFSET514,21658
#define VdsVoltageMaxSet01OFFSET	VdsVoltageMaxSet01OFFSET515,21702
#define VdsVoltageMaxSet02OFFSET	VdsVoltageMaxSet02OFFSET516,21768
#define VdsVoltageMaxSet03OFFSET	VdsVoltageMaxSet03OFFSET517,21834
#define VdsVoltageMaxSet04OFFSET	VdsVoltageMaxSet04OFFSET518,21900
#define VdsVoltageMaxSet05OFFSET	VdsVoltageMaxSet05OFFSET519,21966
#define VdsVoltageMaxSet06OFFSET	VdsVoltageMaxSet06OFFSET520,22032
#define VdsVoltageMaxSet07OFFSET	VdsVoltageMaxSet07OFFSET521,22098
#define VdsVoltageMaxSet08OFFSET	VdsVoltageMaxSet08OFFSET522,22164
#define VdsVoltageMaxSet09OFFSET	VdsVoltageMaxSet09OFFSET523,22230
#define VdsVoltageMaxSet10OFFSET	VdsVoltageMaxSet10OFFSET524,22296
#define VdsVoltageMaxSet11OFFSET	VdsVoltageMaxSet11OFFSET525,22362
#define VdsVoltageMaxSet12OFFSET	VdsVoltageMaxSet12OFFSET526,22428
#define VdsVoltageMaxSet13OFFSET	VdsVoltageMaxSet13OFFSET527,22494
#define VdsVoltageMaxSet14OFFSET	VdsVoltageMaxSet14OFFSET528,22560
#define VdsVoltageMaxSet15OFFSET	VdsVoltageMaxSet15OFFSET529,22626
#define VdsVoltageMaxSet16OFFSET	VdsVoltageMaxSet16OFFSET530,22692
#define VdsVoltageMaxSet17OFFSET	VdsVoltageMaxSet17OFFSET531,22758
#define VdsVoltageMaxSet18OFFSET	VdsVoltageMaxSet18OFFSET532,22824
#define VdsVoltageMaxSet19OFFSET	VdsVoltageMaxSet19OFFSET533,22890
#define VdsVoltageMaxSet20OFFSET	VdsVoltageMaxSet20OFFSET534,22956
#define VdsVoltageMaxSet21OFFSET	VdsVoltageMaxSet21OFFSET535,23022
#define VdsVoltageMaxSet22OFFSET	VdsVoltageMaxSet22OFFSET536,23088
#define VdsVoltageMaxSet23OFFSET	VdsVoltageMaxSet23OFFSET537,23154
#define VdsCurrentMaxSet00OFFSET	VdsCurrentMaxSet00OFFSET540,23244
#define VdsCurrentMaxSet01OFFSET	VdsCurrentMaxSet01OFFSET541,23288
#define VdsCurrentMaxSet02OFFSET	VdsCurrentMaxSet02OFFSET542,23354
#define VdsCurrentMaxSet03OFFSET	VdsCurrentMaxSet03OFFSET543,23420
#define VdsCurrentMaxSet04OFFSET	VdsCurrentMaxSet04OFFSET544,23486
#define VdsCurrentMaxSet05OFFSET	VdsCurrentMaxSet05OFFSET545,23552
#define VdsCurrentMaxSet06OFFSET	VdsCurrentMaxSet06OFFSET546,23618
#define VdsCurrentMaxSet07OFFSET	VdsCurrentMaxSet07OFFSET547,23684
#define VdsCurrentMaxSet08OFFSET	VdsCurrentMaxSet08OFFSET548,23750
#define VdsCurrentMaxSet09OFFSET	VdsCurrentMaxSet09OFFSET549,23816
#define VdsCurrentMaxSet10OFFSET	VdsCurrentMaxSet10OFFSET550,23882
#define VdsCurrentMaxSet11OFFSET	VdsCurrentMaxSet11OFFSET551,23948
#define VdsCurrentMaxSet12OFFSET	VdsCurrentMaxSet12OFFSET552,24014
#define VdsCurrentMaxSet13OFFSET	VdsCurrentMaxSet13OFFSET553,24080
#define VdsCurrentMaxSet14OFFSET	VdsCurrentMaxSet14OFFSET554,24146
#define VdsCurrentMaxSet15OFFSET	VdsCurrentMaxSet15OFFSET555,24212
#define VdsCurrentMaxSet16OFFSET	VdsCurrentMaxSet16OFFSET556,24278
#define VdsCurrentMaxSet17OFFSET	VdsCurrentMaxSet17OFFSET557,24344
#define VdsCurrentMaxSet18OFFSET	VdsCurrentMaxSet18OFFSET558,24410
#define VdsCurrentMaxSet19OFFSET	VdsCurrentMaxSet19OFFSET559,24476
#define VdsCurrentMaxSet20OFFSET	VdsCurrentMaxSet20OFFSET560,24542
#define VdsCurrentMaxSet21OFFSET	VdsCurrentMaxSet21OFFSET561,24608
#define VdsCurrentMaxSet22OFFSET	VdsCurrentMaxSet22OFFSET562,24674
#define VdsCurrentMaxSet23OFFSET	VdsCurrentMaxSet23OFFSET563,24740
#define VdsSetVoltageAllChannelsOFFSET	VdsSetVoltageAllChannelsOFFSET569,24897
#define VdsSetCurrentAllChannelsOFFSET	VdsSetCurrentAllChannelsOFFSET570,24962
#define VdsSetVoltageBoundsAllChannelsOFFSET	VdsSetVoltageBoundsAllChannelsOFFSET571,25039
#define VdsSetCurrentBoundsAllChannelsOFFSET	VdsSetCurrentBoundsAllChannelsOFFSET572,25120
#define VdsSetEmergencyAllChannelsOFFSET	VdsSetEmergencyAllChannelsOFFSET573,25207
#define VdsSetOnOffAllChannelsOFFSET	VdsSetOnOffAllChannelsOFFSET574,25291
#define VdsSetVoltageMaxAllChannelsOFFSET	VdsSetVoltageMaxAllChannelsOFFSET575,25368
#define VdsSetCurrentMaxAllChannelsOFFSET	VdsSetCurrentMaxAllChannelsOFFSET576,25445

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/include/InterfaceVME.h,315
#define INTERFACEVME_H_INTERFACEVME_H_9,119
namespace vme {vme30,499
class InterfaceVME {InterfaceVME35,526
	QString m_serialNumber;m_serialNumber65,1099
	const int MAX_USB_DEV;MAX_USB_DEV67,1125
	usb_dev_handle* m_usbDev;m_usbDev69,1150
	std::vector<xxusb_device_type> m_deviceVec;m_deviceVec71,1178

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/include/pc.hpp,5385
#define _PC_HPP _PC_HPP14,748
class PC:public QThread{PC34,1027
    FPGA fpga;fpga49,1385
    bool _useHvFadc;                           //< true if a FADC is used, false otherwise_useHvFadc118,4424
    HV_FADC_Obj* _hvFadcObj;                           //< The HV_FADC-Pointer. If no HV_FADC_Obj is used, it will be set to 0_hvFadcObj119,4515
    int ok;ok146,5906
    volatile bool RunIsRunning; //< True if one records data, false otherwise (maybe also true if one wants to...)RunIsRunning148,5919
    QMutex mutexRun;            //< Var to ensure no other var is accesed by two threads at the same timemutexRun149,6034
    int LFSR_LookUpTable[16384];LFSR_LookUpTable154,6267
    int MeasuringCounter;MeasuringCounter155,6300
    int runtime;                                   //< var to store the runtime in sec or in nb of triggers runtime156,6326
    unsigned short runtimeFrames;                  //< run mode var: run for a given time or nb of triggers runtimeFrames157,6435
    int shutterTime;shutterTime158,6544
    unsigned short run_mode;run_mode160,6632
    int filter;filter161,6661
    unsigned short shutter_mode; shutter_mode164,6821
    bool _useExternalTrigger;_useExternalTrigger167,6963
    bool _useFastClock;_useFastClock168,6993
    int BufferSize;BufferSize172,7074
    std::vector<std::vector< std::vector<int>* > > Vbuffer;Vbuffer173,7094
    QWaitCondition bufferNotEmpty;bufferNotEmpty175,7155
    QWaitCondition bufferNotFull;bufferNotFull176,7190
    QMutex mutexVBuffer;mutexVBuffer177,7224
    int DataInBuffer;DataInBuffer178,7249
    volatile bool DataAcqRunning;DataAcqRunning179,7271
    std::string PathName;PathName182,7346
    std::string FileName;FileName183,7372
    std::string TOSPathName;TOSPathName184,7398
    std::string DataPathName;DataPathName185,7427
    std::string DataFileName;DataFileName187,7459
    std::string Data2FileName;Data2FileName188,7489
    std::string Data3FileName;Data3FileName189,7520
    std::string Data4FileName;Data4FileName190,7551
    std::string Data5FileName;Data5FileName191,7582
    std::string Data6FileName;Data6FileName192,7613
    std::string Data7FileName;Data7FileName193,7644
    std::string Data8FileName;Data8FileName194,7675
    std::string DataCompleteName;DataCompleteName196,7709
    std::string RunFileName;RunFileName197,7743
    std::string FSRPathName;FSRPathName199,7773
    std::string FSRFileName;FSRFileName200,7802
    std::string FSR2FileName;FSR2FileName201,7831
    std::string FSR3FileName;FSR3FileName202,7861
    std::string FSR4FileName;FSR4FileName203,7891
    std::string FSR5FileName;FSR5FileName204,7921
    std::string FSR6FileName;FSR6FileName205,7951
    std::string FSR7FileName;FSR7FileName206,7981
    std::string FSR8FileName;FSR8FileName207,8011
    std::string matrixPathName;matrixPathName209,8042
    std::string MatrixFileName;MatrixFileName210,8074
    std::string Matrix2FileName;Matrix2FileName211,8106
    std::string Matrix3FileName;Matrix3FileName212,8139
    std::string Matrix4FileName;Matrix4FileName213,8172
    std::string Matrix5FileName;Matrix5FileName214,8205
    std::string Matrix6FileName;Matrix6FileName215,8238
    std::string Matrix7FileName;Matrix7FileName216,8271
    std::string Matrix8FileName;Matrix8FileName217,8304
    std::string DACScanFileName;DACScanFileName219,8338
    std::string ThresholdFileName;ThresholdFileName221,8372
    std::string Threshold2FileName;Threshold2FileName222,8407
    std::string Threshold3FileName;Threshold3FileName223,8443
    std::string Threshold4FileName;Threshold4FileName224,8479
    std::string Threshold5FileName;Threshold5FileName225,8515
    std::string Threshold6FileName;Threshold6FileName226,8551
    std::string Threshold7FileName;Threshold7FileName227,8587
    std::string Threshold8FileName;Threshold8FileName228,8623
    std::string MaskFileName;MaskFileName230,8662
    std::string Mask2FileName;Mask2FileName231,8692
    std::string Mask3FileName;Mask3FileName232,8723
    std::string Mask4FileName;Mask4FileName233,8754
    std::string Mask5FileName;Mask5FileName234,8785
    std::string Mask6FileName;Mask6FileName235,8816
    std::string Mask7FileName;Mask7FileName236,8847
    std::string Mask8FileName;Mask8FileName237,8878
    std::string TOTCalibFileName; TOTCalibFileName239,8912
    std::string TOTCalib2FileName; TOTCalib2FileName240,8947
    std::string TOTCalib3FileName; TOTCalib3FileName241,8983
    std::string TOTCalib4FileName; TOTCalib4FileName242,9019
    std::string TOTCalib5FileName; TOTCalib5FileName243,9055
    std::string TOTCalib6FileName; TOTCalib6FileName244,9091
    std::string TOTCalib7FileName; TOTCalib7FileName245,9127
    std::string TOTCalib8FileName;TOTCalib8FileName246,9163
    std::string TOACalibFileName; TOACalibFileName248,9200
    std::string TOACalib2FileName; TOACalib2FileName249,9235
    std::string TOACalib3FileName; TOACalib3FileName250,9271
    std::string TOACalib4FileName; TOACalib4FileName251,9307
    std::string TOACalib5FileName; TOACalib5FileName252,9343
    std::string TOACalib6FileName; TOACalib6FileName253,9379
    std::string TOACalib7FileName; TOACalib7FileName254,9415
    std::string TOACalib8FileName;TOACalib8FileName255,9451

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/include/vmusb.h,1482
#define __VMUSB_H__VMUSB_H6,102
	#define __stdcall__stdcall30,457
typedef short (__stdcall *t_xxusbDevicesFind)(xxusb_device_type *);t_xxusbDevicesFind35,551
typedef usb_dev_handle* (__stdcall *t_xxusbDeviceOpen)(struct usb_device *dev);t_xxusbDeviceOpen36,619
typedef short (__stdcall *t_xxusbDeviceClose)(usb_dev_handle *hDev);t_xxusbDeviceClose37,699
typedef short (__stdcall *t_vmeRead16)(usb_dev_handle *, short, long, long *);t_vmeRead1638,768
typedef short (__stdcall *t_vmeWrite16)(usb_dev_handle *, short, long, long);t_vmeWrite1639,847
typedef short (__stdcall *t_vmeRead32)(usb_dev_handle *, short, long, long *);t_vmeRead3240,925
typedef short (__stdcall *t_vmeWrite32)(usb_dev_handle *, short, long, long); t_vmeWrite3241,1004
typedef short (__stdcall *t_vmeBltRead32)(usb_dev_handle *, short, int, long, long *); t_vmeBltRead3242,1083
class CVmUsb : public CVmeControllerCVmUsb44,1172
	QLibrary *lib;lib72,2358
	usb_dev_handle *udev;udev74,2375
	QString serialNumber;serialNumber76,2399
	QString ErrorString;ErrorString77,2422
	t_xxusbDevicesFind xxusbDevicesFind;xxusbDevicesFind79,2445
	t_xxusbDeviceOpen xxusbDeviceOpen;xxusbDeviceOpen80,2483
	t_xxusbDeviceClose xxusbDeviceClose;xxusbDeviceClose81,2519
	t_vmeRead16 vmeRead16;vmeRead1682,2557
	t_vmeWrite16 vmeWrite16;vmeWrite1683,2581
	t_vmeRead32 vmeRead32;vmeRead3284,2607
	t_vmeWrite32 vmeWrite32;vmeWrite3285,2631
	t_vmeBltRead32 vmeBltRead32;vmeBltRead3287,2693

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/include/High-Level-functions_VME.h,310
#define V1729a_HighLevelFunctions_VME_H V1729a_HighLevelFunctions_VME_H7,199
class HighLevelFunction_VME{HighLevelFunction_VME25,469
  V1729a* _currentDevice;_currentDevice121,2646
  int const _nb; _nb123,2734
  std::vector<unsigned short> _triggerThresholdRegister;_triggerThresholdRegister125,2839

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/include/FADCConstants_V1729a.h,3559
#define V1729a_FADCCONSTANTS_H V1729a_FADCCONSTANTS_H2,31
  static const unsigned int VME_OFFSET = 0x10000;VME_OFFSET7,150
  static const unsigned int MULT_SUB_ADRESS = 0x100;MULT_SUB_ADRESS8,200
  static const unsigned int INTERRUPT = 0x0000;INTERRUPT13,381
  static const unsigned int FP_FREQUENCY = 0x0100;FP_FREQUENCY14,429
  static const unsigned int FPGA_VERSION = 0x0200;FPGA_VERSION15,480
  static const unsigned int MODE_REGISTER = 0x0300;MODE_REGISTER16,531
  static const unsigned int EV_OF_FPGA_VERSION = 0x0400;EV_OF_FPGA_VERSION17,583
  static const unsigned int RESET = 0x00800;RESET19,662
  static const unsigned int LOAD_TRIGGER_THRESHOLD = 0x0900;LOAD_TRIGGER_THRESHOLD20,707
  static const unsigned int TRIGGER_THRESH_DAC_ALL = 0x0A00;TRIGGER_THRESH_DAC_ALL21,768
  static const unsigned int RAM_DATA_VME = 0x0D00;RAM_DATA_VME23,854
  static const unsigned int RAM_INT_ADD_LSB = 0x0E00;RAM_INT_ADD_LSB24,905
  static const unsigned int RAM_INT_ADD_MSB = 0x0F00;RAM_INT_ADD_MSB25,959
  static const unsigned int MAT_CTRL_REGISTER_LSB = 0x1000;MAT_CTRL_REGISTER_LSB26,1013
  static const unsigned int MAT_CTRL_REGISTER_MSB = 0x1100;MAT_CTRL_REGISTER_MSB27,1073
  static const unsigned int START_ACQUISITION = 0x01700;START_ACQUISITION29,1152
  static const unsigned int PRETRIG_LSB = 0x1800;PRETRIG_LSB30,1209
  static const unsigned int PRETRIG_MSB = 0x1900;PRETRIG_MSB31,1259
  static const unsigned int POSTTRIG_LSB = 0x1A00;POSTTRIG_LSB32,1309
  static const unsigned int POSTTRIG_MSB = 0x1B00;POSTTRIG_MSB33,1360
  static const unsigned int SOFTWARE_TRIGGER = 0x1C00;SOFTWARE_TRIGGER34,1411
  static const unsigned int TRIGGER_TYPE = 0x1D00;TRIGGER_TYPE35,1466
  static const unsigned int TRIGGER_CHANNEL_SOURCE = 0x1E00;TRIGGER_CHANNEL_SOURCE36,1517
  static const unsigned int TRIGGER_REC = 0x2000;TRIGGER_REC38,1599
  static const unsigned int FAST_READ_MODES = 0x2100;FAST_READ_MODES39,1649
  static const unsigned int NB_OF_COLS_TO_READ = 0x2200;NB_OF_COLS_TO_READ40,1703
  static const unsigned int CHANNEL_MASK = 0x2300;CHANNEL_MASK41,1760
  static const unsigned int VALP_CP_REGISTER = 0x2600;VALP_CP_REGISTER43,1845
  static const unsigned int VALI_CP_REGISTER = 0x2700;VALI_CP_REGISTER44,1900
  static const unsigned int TRIGGER_THRESH_DAC_CH1 = 0x2800;TRIGGER_THRESH_DAC_CH145,1955
  static const unsigned int TRIGGER_THRESH_DAC_CH2 = 0x2900;TRIGGER_THRESH_DAC_CH246,2016
  static const unsigned int TRIGGER_THRESH_DAC_CH3 = 0x2A00;TRIGGER_THRESH_DAC_CH347,2077
  static const unsigned int TRIGGER_THRESH_DAC_CH4 = 0x2B00;TRIGGER_THRESH_DAC_CH448,2138
  static const unsigned int EEPROM_WRITE = 0x2C00;EEPROM_WRITE49,2199
  static const unsigned int EEPROM_POLL = 0x2D00;EEPROM_POLL50,2250
  static const unsigned int EEPROM_READ = 0x2E00;EEPROM_READ51,2300
  static const unsigned int POST_STOP_LATENCY = 0x3000;      POST_STOP_LATENCY53,2371
  static const unsigned int POST_LATENCY_PRETRIG = 0x3100;POST_LATENCY_PRETRIG54,2433
  static const unsigned int NB_OF_CHANNELS = 0x3400;NB_OF_CHANNELS56,2516
  static const unsigned int RATE_REG = 0x3800;RATE_REG58,2593
  static const unsigned int TRIG_COUNT_LSB = 0x3900;TRIG_COUNT_LSB59,2640
  static const unsigned int TRIG_COUNT_MSB = 0x3A00;TRIG_COUNT_MSB60,2693
  static const unsigned int TRIG_RATE_LSB = 0x3B00;TRIG_RATE_LSB61,2746
  static const unsigned int TRIG_RATE_MSB = 0x3C00;TRIG_RATE_MSB62,2798
  static const unsigned int TRIG_COUNT_RATE = 0x3D00;TRIG_COUNT_RATE63,2850

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/include/V1729a_VME.h,155
#define V1729a_VME_H V1729a_VME_H2,21
class V1729a_VME : public V1729a, public vme::DeviceVME{V1729a_VME52,1349
  ~V1729a_VME(){};~V1729a_VME62,1499

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/include/caseHeader.h,0

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/include/gui.hpp,56
#define _GUI_HPP _GUI_HPP13,748
class GUI{GUI19,812

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/include/HV_FADC_Obj.h,6830
#define HV_FADC_Obj_H HV_FADC_Obj_H2,22
#define DEFAULT_BASE_ADDRESS_HV DEFAULT_BASE_ADDRESS_HV46,1110
#define DEFAULT_S_ADDRESS_FADC DEFAULT_S_ADDRESS_FADC47,1183
#define DEFAULT_SET_KILL_ENABLE DEFAULT_SET_KILL_ENABLE48,1251
#define DEFAULT_ANODE_GRID_GROUP_FLAG DEFAULT_ANODE_GRID_GROUP_FLAG49,1322
#define DEFAULT_ANODE_GRID_GROUP_NUMBER DEFAULT_ANODE_GRID_GROUP_NUMBER50,1393
#define DEFAULT_MONITOR_TRIP_GROUP_FLAG DEFAULT_MONITOR_TRIP_GROUP_FLAG51,1461
#define DEFAULT_MONITOR_TRIP_GROUP_NUMBER DEFAULT_MONITOR_TRIP_GROUP_NUMBER52,1532
#define DEFAULT_RAMPING_GROUP_FLAG DEFAULT_RAMPING_GROUP_FLAG53,1600
#define DEFAULT_RAMPING_GROUP_NUMBER DEFAULT_RAMPING_GROUP_NUMBER54,1671
#define DEFAULT_GRID_CHANNEL_NUMBER DEFAULT_GRID_CHANNEL_NUMBER55,1739
#define DEFAULT_ANODE_CHANNEL_NUMBER DEFAULT_ANODE_CHANNEL_NUMBER56,1807
#define DEFAULT_CATHODE_CHANNEL_NUMBER DEFAULT_CATHODE_CHANNEL_NUMBER57,1875
#define DEFAULT_ANODE_GRID_GROUP_MASTER_CHANNEL DEFAULT_ANODE_GRID_GROUP_MASTER_CHANNEL58,1943
#define DEFAULT_ANODE_GRID_GROUP_MODE DEFAULT_ANODE_GRID_GROUP_MODE59,2048
#define DEFAULT_GRID_VOLTAGE_SET DEFAULT_GRID_VOLTAGE_SET61,2117
#define DEFAULT_GRID_VOLTAGE_NOMINAL DEFAULT_GRID_VOLTAGE_NOMINAL62,2187
#define DEFAULT_GRID_VOLTAGE_BOUND DEFAULT_GRID_VOLTAGE_BOUND63,2257
#define DEFAULT_GRID_CURRENT_SET DEFAULT_GRID_CURRENT_SET64,2325
#define DEFAULT_GRID_CURRENT_NOMINAL DEFAULT_GRID_CURRENT_NOMINAL65,2406
#define DEFAULT_GRID_CURRENT_BOUND DEFAULT_GRID_CURRENT_BOUND66,2487
#define DEFAULT_ANODE_VOLTAGE_SET DEFAULT_ANODE_VOLTAGE_SET68,2556
#define DEFAULT_ANODE_VOLTAGE_NOMINAL DEFAULT_ANODE_VOLTAGE_NOMINAL69,2626
#define DEFAULT_ANODE_VOLTAGE_BOUND DEFAULT_ANODE_VOLTAGE_BOUND70,2696
#define DEFAULT_ANODE_CURRENT_SET DEFAULT_ANODE_CURRENT_SET71,2764
#define DEFAULT_ANODE_CURRENT_NOMINAL DEFAULT_ANODE_CURRENT_NOMINAL72,2845
#define DEFAULT_ANODE_CURRENT_BOUND DEFAULT_ANODE_CURRENT_BOUND73,2926
#define DEFAULT_CATHODE_VOLTAGE_SET DEFAULT_CATHODE_VOLTAGE_SET75,2995
#define DEFAULT_CATHODE_VOLTAGE_NOMINAL DEFAULT_CATHODE_VOLTAGE_NOMINAL76,3066
#define DEFAULT_CATHODE_VOLTAGE_BOUND DEFAULT_CATHODE_VOLTAGE_BOUND77,3137
#define DEFAULT_CATHODE_CURRENT_SET DEFAULT_CATHODE_CURRENT_SET78,3205
#define DEFAULT_CATHODE_CURRENT_NOMINAL DEFAULT_CATHODE_CURRENT_NOMINAL79,3286
#define DEFAULT_CATHODE_CURRENT_BOUND DEFAULT_CATHODE_CURRENT_BOUND80,3367
#define DEFAULT_MODULE_VOLTAGE_RAMP_SPEED DEFAULT_MODULE_VOLTAGE_RAMP_SPEED82,3436
#define DEFAULT_MODULE_CURRENT_RAMP_SPEED DEFAULT_MODULE_CURRENT_RAMP_SPEED83,3504
#define DEFAULT_CHECK_MODULE_TIME_INTERVAL DEFAULT_CHECK_MODULE_TIME_INTERVAL84,3573
#define DEFAULT_FADC_TRIGGER_TYPE DEFAULT_FADC_TRIGGER_TYPE87,3658
#define DEFAULT_FADC_FREQUENCY DEFAULT_FADC_FREQUENCY88,3726
#define DEFAULT_FADC_POSTTRIG DEFAULT_FADC_POSTTRIG89,3794
#define DEFAULT_FADC_PRETRIG DEFAULT_FADC_PRETRIG90,3863
#define DEFAULT_FADC_TRIGGER_THRESHOLD_REGISTER_ALL DEFAULT_FADC_TRIGGER_THRESHOLD_REGISTER_ALL91,3935
#define DEFAULT_HV_SLEEP_TIME DEFAULT_HV_SLEEP_TIME94,4020
#define MAX_INI_PATH_LENGTH MAX_INI_PATH_LENGTH97,4136
class HV_FADC_ObjHV_FADC_Obj101,4209
    bool   H_IsConnected(void) { return HV_module->IsConnected(); }H_IsConnected228,9633
    uint16_t H_GetModuleBaseAddress() { return HV_module->GetModuleBaseAddress(); }H_GetModuleBaseAddress237,9990
    void   H_ClearModuleEventStatus(void) { HV_module->SetModuleEventStatus(0xFFFFFFFF); }H_ClearModuleEventStatus256,10707
    void   H_ClearChannelEventStatus(int channel) { HV_module->SetChannelEventStatus(channel, 0xFFFFFFFF); }H_ClearChannelEventStatus295,12317
    HighLevelFunction_VME* FADC_Functions;FADC_Functions376,15593
    V1729a_VME *FADC_module;FADC_module391,15922
    CVmeModule *HV_module;HV_module393,15998
    CVmUsb Controller;Controller395,16026
    int baseAddress_hv;baseAddress_hv398,16096
    int sAddress_fadc;sAddress_fadc399,16120
    QString iniFile;iniFile401,16144
    GroupSTRUCT anodeGridSetOnGroup;anodeGridSetOnGroup403,16186
    GroupSTRUCT monitorTripGroup;monitorTripGroup404,16223
    GroupSTRUCT rampingGroup;rampingGroup407,16356
    int anodeGridGroupMasterChannel;anodeGridGroupMasterChannel409,16412
    int anodeGridGroupNumber;anodeGridGroupNumber410,16449
    int monitorTripGroupNumber;monitorTripGroupNumber411,16479
    int rampingGroupNumber;rampingGroupNumber412,16511
    uint16_t anodeChannelNumber;anodeChannelNumber414,16540
    uint16_t gridChannelNumber;gridChannelNumber415,16573
    uint16_t cathodeChannelNumber;cathodeChannelNumber416,16605
    bool hvFadcObjCreatedFlag;hvFadcObjCreatedFlag419,16654
    bool hvFadcObjSettingsReadFlag;hvFadcObjSettingsReadFlag420,16685
    bool hvFadcObjInitFlag;hvFadcObjInitFlag421,16721
    bool setKillEnable;setKillEnable422,16749
    bool anodeGridGroupFlag;anodeGridGroupFlag423,16773
    bool monitorTripGroupFlag;monitorTripGroupFlag424,16802
    bool rampingGroupFlag;rampingGroupFlag425,16833
    float moduleVoltageRampSpeed;moduleVoltageRampSpeed428,16884
    float moduleCurrentRampSpeed;moduleCurrentRampSpeed429,16918
    int checkModuleTimeInterval;checkModuleTimeInterval432,16978
    ChEventStatusSTRUCT gridEventStatusLastIter;gridEventStatusLastIter435,17116
    ChEventStatusSTRUCT anodeEventStatusLastIter;anodeEventStatusLastIter436,17165
    ChEventStatusSTRUCT cathodeEventStatusLastIter;cathodeEventStatusLastIter437,17215
    float gridVoltageSet;gridVoltageSet442,17331
    float gridVoltageNominal;gridVoltageNominal443,17357
    float gridVoltageBound;gridVoltageBound444,17387
    float gridCurrentSet;gridCurrentSet445,17415
    float gridCurrentNominal;gridCurrentNominal446,17441
    float gridCurrentBound;gridCurrentBound447,17471
    float anodeVoltageSet;anodeVoltageSet449,17500
    float anodeVoltageNominal;anodeVoltageNominal450,17527
    float anodeVoltageBound;anodeVoltageBound451,17558
    float anodeCurrentSet;anodeCurrentSet452,17587
    float anodeCurrentNominal;anodeCurrentNominal453,17614
    float anodeCurrentBound;anodeCurrentBound454,17645
    float cathodeVoltageSet;cathodeVoltageSet456,17675
    float cathodeVoltageNominal;cathodeVoltageNominal457,17704
    float cathodeVoltageBound;cathodeVoltageBound458,17737
    float cathodeCurrentSet;cathodeCurrentSet459,17768
    float cathodeCurrentNominal;cathodeCurrentNominal460,17797
    float cathodeCurrentBound;cathodeCurrentBound461,17830
    int fadcTriggerType;fadcTriggerType464,17893
    int fadcFrequency;fadcFrequency465,17918
    int fadcPosttrig;fadcPosttrig466,17941
    int fadcPretrig;fadcPretrig467,17963
    int fadcTriggerThresholdRegisterAll;fadcTriggerThresholdRegisterAll468,17984

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/include/waitconditions.hpp,388
#define _WAITCONDITIONS_HPP_WAITCONDITIONS_HPP2,28
 class Producer : public QThreadProducer12,149
	 Producer( PC* par ) : parent(par) {}Producer16,195
	 ~Producer(){};~Producer17,234
     PC* parent;parent23,283
 class Consumer : public QThreadConsumer28,307
	 Consumer (PC* par ) : parent(par) {}Consumer32,353
	 ~Consumer(){};~Consumer33,392
	 PC* parent;parent39,441

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/include/V1729a.h,129
#define V1729a_H V1729a_H2,17
class V1729a{V1729a38,1075
  V1729a(){};V1729a43,1112
  virtual ~V1729a(){};~V1729a46,1139

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/include/fpga.hpp,2505
#define _FPGA_HPP_FPGA_HPP12,748
class FPGA{FPGA18,814
    Timepix tp;tp28,887
    int ErrInfo;ErrInfo29,903
    int _fadcBit;                 //< set to 1 if a signal was detected on the trigger in input/ 0 otherwise_fadcBit68,2314
    bool _fadcFlag;               //< true if _fadcBit was set to 1 since the flag was cleared the last time _fadcFlag69,2423
    int ok;ok70,2533
    int TriggerConnectionIsTLU;TriggerConnectionIsTLU71,2545
    int sock, Port; sock72,2577
    int sock, Port; Port72,2577
    std::string ip;ip74,2617
    fd_set readfd,testfd; 	 readfd78,2786
    fd_set readfd,testfd; 	 testfd78,2786
    struct timeval timeout; 	//< Zeitvariable fuer Timeout bei Kommunikation mit FPGAtimeout79,2815
    struct sockaddr_in sckadd;	//< in netinet/in.h definierte Struktur fuer IP-Adressensckadd80,2901
    unsigned char Mode;Mode83,3082
    int IncomingLength;IncomingLength88,3257
    int OutgoingLength;OutgoingLength89,3281
    int PacketQueueSize; PacketQueueSize90,3305
    int SoftwareCounter; SoftwareCounter91,3331
    int FPGACounter; FPGACounter92,3357
    int HitsMode;HitsMode93,3379
    char PacketBuffer[PLen+18];        //Buffer fuer send, bzw bei SetMatrix fuer receivePacketBuffer96,3415
    char PacketQueue[PQueue][PLen+18]; //Buffer fuer receive (alle Pakete bei ReadOut), bzw fuer send (alle Pakete) bei SetMatrixPacketQueue97,3505
    std::vector<std::vector<char> > *PackQueueReceive;// = new std::vector<std::vector<unsigned char> >(PQueue, std::vector<unsigned char>(PLen+18));PackQueueReceive98,3635
    unsigned char PacketBuffer[PLen+18]; //Buffer fuer send, bzw bei SetMatrix fuer receivePacketBuffer103,4060
    unsigned char PacketQueue[PQueue][PLen+18]; //Buffer fuer receive (alle Pakete bei ReadOut), bzw fuer send (alle Pakete) bei SetMatrixPacketQueue104,4152
    std::vector<std::vector<unsigned char> > *PackQueueReceive;// = new std::vector<std::vector<unsigned char> >(PQueue, std::vector<unsigned char>(PLen+18));PackQueueReceive105,4291
    bool _usefastclock;		_usefastclock117,5144
template <typename Ausgabe> int FPGA::SerialReadOut(Ausgabe aus)SerialReadOut122,5176
template <typename Ausgabe> int FPGA::SerialReadOutReadSend(Ausgabe aus, unsigned short chip)SerialReadOutReadSend163,6277
template <typename Ausgabe> int FPGA::DataChipFPGA(Ausgabe aus){DataChipFPGA233,8246
template <typename Ausgabe> int FPGA::DataFPGAPC(Ausgabe aus, unsigned short chip){DataFPGAPC251,8907

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/include/tosCommandCompletion.hpp,71
#define _TOS_COMMAND_COMPLETION_HPP _TOS_COMMAND_COMPLETION_HPP6,224

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/include/vmecontroller.h,91
#define __VMECONTROLLER_H__VMECONTROLLER_H2,27
class CVmeControllerCVmeController8,101

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/Makefile,1896
CC            = gccCC11,382
CXX           = g++CXX12,402
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHAREDDEFINES13,422
CFLAGS        = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)CFLAGS14,491
CXXFLAGS      = -m64 -pipe -std=c++0x -o0 -g -Wall -W -pedantic -Wl,--no-as-needed -O2 -Wall -W -D_REENTRANT $(DEFINES)CXXFLAGS15,555
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -Iinclude -ItmpINCPATH16,675
LINK          = g++LINK17,823
LFLAGS        = -m64 -Wl,-O1LFLAGS18,843
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -Wl,--no-as-needed -Wl,--rpath=/usr/local/lib -Wl,--rpath=/usr/lib -lreadline -lQtGui -lQtCore -lpthread LIBS19,872
AR            = ar cqsAR20,1034
RANLIB        = RANLIB21,1057
QMAKE         = /usr/bin/qmake-qt4QMAKE22,1074
TAR           = tar -cfTAR23,1109
COMPRESS      = gzip -9fCOMPRESS24,1133
COPY          = cp -fCOPY25,1158
SED           = sedSED26,1180
COPY_FILE     = $(COPY)COPY_FILE27,1200
COPY_DIR      = $(COPY) -rCOPY_DIR28,1224
STRIP         = stripSTRIP29,1251
INSTALL_FILE  = install -m 644 -pINSTALL_FILE30,1273
INSTALL_DIR   = $(COPY_DIR)INSTALL_DIR31,1307
INSTALL_PROGRAM = install -m 755 -pINSTALL_PROGRAM32,1335
DEL_FILE      = rm -fDEL_FILE33,1371
SYMLINK       = ln -f -sSYMLINK34,1393
DEL_DIR       = rmdirDEL_DIR35,1418
MOVE          = mv -fMOVE36,1440
CHK_DIR_EXISTS= test -dCHK_DIR_EXISTS37,1462
MKDIR         = mkdir -pMKDIR38,1486
OBJECTS_DIR   = tmp/OBJECTS_DIR42,1538
SOURCES       = src/caseFunctions.cc \SOURCES46,1575
OBJECTS       = tmp/caseFunctions.o \OBJECTS62,1945
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \DIST78,2287
QMAKE_TARGET  = TOSQMAKE_TARGET103,3486
DESTDIR       = bin/DESTDIR104,3506
TARGET        = bin/TOSTARGET105,3527

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/bin/recompile.sh,0

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/src/InterfaceVME.cc,683
namespace vme {vme19,197
InterfaceVME::InterfaceVME( int devNr ):MAX_USB_DEV(32),InterfaceVME25,218
InterfaceVME::~InterfaceVME()~InterfaceVME52,928
void InterfaceVME::write32( int data, int address, int addressModifier )write3264,1072
void InterfaceVME::write16( int data, int address, int addressModifier ){write1679,1414
int InterfaceVME::read32( int address, int addressModifier )read3295,1749
int InterfaceVME::read16( int address, int addressModifier ){read16114,2108
std::vector<int> InterfaceVME::readBlock32( int addr, int nWords, int addrMod)readBlock32135,2459
bool InterfaceVME::isIrq(){isIrq182,3304
void InterfaceVME::init( int devNr ){init202,3593

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/src/waitconditions.cpp,66
void Producer::run()run14,203
void Consumer::run()run239,7478

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/src/tosCommandCompletion.cpp,989
const char *tosCommands[] = {"GeneralReset", tosCommands9,325
char *TOS_Command_Generator(const char *text, int state){TOS_Command_Generator119,4347
char **TOS_Command_Completion(const char *text, int start, int end){TOS_Command_Completion143,4855
int check_if_string_allowed(std::string tempStr, check_if_string_allowed156,5320
std::string getUserInput(const char *prompt, getUserInput180,6219
std::string getUserInputNumericalDefault(const char *prompt, std::set<std::string> *allowedStrings){getUserInputNumericalDefault265,9449
std::string getUserInputNumericalNoDefault(const char *prompt, std::set<std::string> *allowedStrings){    getUserInputNumericalNoDefault269,9614
std::string getUserInputNonNumericalDefault(const char *prompt, std::set<std::string> *allowedStrings){   getUserInputNonNumericalDefault273,9786
std::string getUserInputNonNumericalNoDefault(const char *prompt, std::set<std::string> *allowedStrings){ getUserInputNonNumericalNoDefault277,9958

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/src/HV_FADC_Obj.cc,14805
HV_FADC_Obj::HV_FADC_Obj(int sAddress_fadc, int baseAddress_hv, std::string iniFilePath){HV_FADC_Obj20,381
HV_FADC_Obj::HV_FADC_Obj(std::string iniFilePath){HV_FADC_Obj63,1890
HV_FADC_Obj::~HV_FADC_Obj() {~HV_FADC_Obj108,3286
int HV_FADC_Obj::H_ConnectModule(){H_ConnectModule142,4143
void HV_FADC_Obj::ReadHFOSettings(){ReadHFOSettings146,4219
void HV_FADC_Obj::InitHFOForTOS(){InitHFOForTOS548,16256
void HV_FADC_Obj::H_CheckModuleIsRamping(bool rampUpFlag){H_CheckModuleIsRamping887,28716
int HV_FADC_Obj::H_CheckHVModuleIsGood(bool verbose){H_CheckHVModuleIsGood1072,36595
const std::string currentDateTime() {currentDateTime1182,40825
void HV_FADC_Obj::H_DumpErrorLogToFile(int event){H_DumpErrorLogToFile1194,41165
void HV_FADC_Obj::ShutDownHFOForTOS(){ShutDownHFOForTOS1292,46622
int HV_FADC_Obj::H_ClearAllChannelEventStatus(){H_ClearAllChannelEventStatus1353,48795
void HV_FADC_Obj::H_SetNominalValues(){H_SetNominalValues1407,50837
GroupSTRUCT HV_FADC_Obj::H_GetFlexGroup(int group){H_GetFlexGroup1473,53269
void HV_FADC_Obj::H_SetFlexGroup(int group, GroupSTRUCT groupObject){H_SetFlexGroup1490,53879
void         HV_FADC_Obj::F_Reset() throw(){F_Reset1516,54508
void         HV_FADC_Obj::F_StartAcquisition() throw(){F_StartAcquisition1520,54582
void         HV_FADC_Obj::F_SetFrequency( const unsigned short& frequency ) throw(){F_SetFrequency1524,54678
unsigned int HV_FADC_Obj::F_GetFrequency() throw(){F_GetFrequency1528,54810
void HV_FADC_Obj::F_SetReadMode( const unsigned short& mode ) throw(){F_SetReadMode1532,54905
unsigned int HV_FADC_Obj::F_GetReadMode() throw(){F_GetReadMode1536,55017
unsigned int HV_FADC_Obj::F_GetFPGAVersion() throw(){F_GetFPGAVersion1540,55110
void         HV_FADC_Obj::F_SetTriggerThresholdDACAll(const unsigned int threshold) throw(){F_SetTriggerThresholdDACAll1545,55270
unsigned int HV_FADC_Obj::F_GetTriggerThresholdDACAll() throw(){F_GetTriggerThresholdDACAll1549,55421
void         HV_FADC_Obj::F_SetTriggerThresholdDACPerChannel(const unsigned short chNb, const unsigned int threshold) throw(){F_SetTriggerThresholdDACPerChannel1553,55542
unsigned int HV_FADC_Obj::F_GetTriggerThresholdDACPerChannel(const unsigned short chNb) throw(){F_GetTriggerThresholdDACPerChannel1557,55740
void         HV_FADC_Obj::F_LoadTriggerThresholdDAC() throw(){F_LoadTriggerThresholdDAC1561,55904
unsigned int HV_FADC_Obj::F_GetTriggerRecord() throw(){F_GetTriggerRecord1565,56014
void         HV_FADC_Obj::F_SendSoftwareTrigger() throw(){F_SendSoftwareTrigger1569,56117
void         HV_FADC_Obj::F_SetPretrig( const unsigned short& bits ) throw(){F_SetPretrig1573,56219
unsigned short HV_FADC_Obj::F_GetPretrig() throw(){F_GetPretrig1577,56337
void         HV_FADC_Obj::F_SetPosttrig( const unsigned short& bits ) throw(){F_SetPosttrig1581,56430
unsigned int HV_FADC_Obj::F_GetPosttrig() throw(){F_GetPosttrig1585,56550
void         HV_FADC_Obj::F_SetTriggerType( const unsigned short& type ) throw(){F_SetTriggerType1589,56643
unsigned short HV_FADC_Obj::F_GetTriggerType() throw(){F_GetTriggerType1593,56769
void         HV_FADC_Obj::F_SetTriggerChannelSource( const unsigned short& mask ) throw(){F_SetTriggerChannelSource1597,56870
unsigned short HV_FADC_Obj::F_GetTriggerChannelSource() throw(){F_GetTriggerChannelSource1601,57014
unsigned short HV_FADC_Obj::F_GetModeRegister() throw(){F_GetModeRegister1606,57183
void           HV_FADC_Obj::F_SetModeRegister(const unsigned short& mode) throw(){F_SetModeRegister1610,57286
void           HV_FADC_Obj::F_SetColToRead( const unsigned short& col ) throw(){F_SetColToRead1614,57412
unsigned short HV_FADC_Obj::F_GetColToRead() throw(){F_GetColToRead1618,57534
void           HV_FADC_Obj::F_SetChannelMask( const unsigned short& mask ) throw(){F_SetChannelMask1622,57631
unsigned short HV_FADC_Obj::F_GetChannelMask() throw(){F_GetChannelMask1626,57759
void           HV_FADC_Obj::F_SetNbOfChannels(const unsigned short& nbOfChannels) throw(){F_SetNbOfChannels1630,57860
unsigned short HV_FADC_Obj::F_GetNbOfChannels() throw(){F_GetNbOfChannels1634,58002
void           HV_FADC_Obj::F_SetPostStopLatency( const unsigned short& latency ) throw(){F_SetPostStopLatency1638,58105
unsigned short HV_FADC_Obj::F_GetPostStopLatency() throw(){F_GetPostStopLatency1642,58247
void           HV_FADC_Obj::F_SetPostLatencyPretrig( const unsigned short& latency ) throw(){F_SetPostLatencyPretrig1646,58356
unsigned short HV_FADC_Obj::F_GetPostLatencyPretrig() throw(){F_GetPostLatencyPretrig1650,58504
void           HV_FADC_Obj::F_SetRAMAddress( const unsigned short& add ) throw(){F_SetRAMAddress1654,58619
unsigned short HV_FADC_Obj::F_GetRAMAddress() throw(){F_GetRAMAddress1658,58743
std::vector< int > HV_FADC_Obj::F_GetAllData( const unsigned short& nbChannels) throw(){F_GetAllData1662,58842
std::vector< int > HV_FADC_Obj::F_GetAllDataBlockMode() throw(){F_GetAllDataBlockMode1666,58983
int            HV_FADC_Obj::F_GetDataAt( const unsigned short& add ) throw(){F_GetDataAt1670,59098
void           HV_FADC_Obj::F_ReleaseInterrupt() throw(){F_ReleaseInterrupt1675,59273
bool           HV_FADC_Obj::F_ReadDeviceInterrupt() throw(){F_ReadDeviceInterrupt1679,59371
bool           HV_FADC_Obj::F_ReadInterrupt() throw(){F_ReadInterrupt1683,59482
int    HV_FADC_Obj::H_GetModuleDeviceClass(void){H_GetModuleDeviceClass1695,59826
uint32_t HV_FADC_Obj::H_GetModulePlacedChannels(void){H_GetModulePlacedChannels1699,59925
int    HV_FADC_Obj::H_GetModuleSerialNumber(void){H_GetModuleSerialNumber1703,60032
uint32_t HV_FADC_Obj::H_GetModuleFirmwareRelease(void){H_GetModuleFirmwareRelease1707,60133
void   HV_FADC_Obj::H_DoClear(void){H_DoClear1712,60243
void   HV_FADC_Obj::H_SetModuleBaseAddress(uint16_t ba){H_SetModuleBaseAddress1717,60310
float  HV_FADC_Obj::H_GetModuleTemperature(void){H_GetModuleTemperature1722,60412
float  HV_FADC_Obj::H_GetModuleSupplyP5(void){H_GetModuleSupplyP51726,60511
float  HV_FADC_Obj::H_GetModuleSupplyP12(void){H_GetModuleSupplyP121730,60604
float  HV_FADC_Obj::H_GetModuleSupplyN12(void){H_GetModuleSupplyN121734,60699
uint32_t HV_FADC_Obj::H_GetModuleAdcSamplesPerSecond(void){H_GetModuleAdcSamplesPerSecond1739,60795
void   HV_FADC_Obj::H_SetModuleAdcSamplesPerSecond(uint32_t sps){H_SetModuleAdcSamplesPerSecond1743,60912
uint32_t HV_FADC_Obj::H_GetModuleDigitalFilter(void){H_GetModuleDigitalFilter1747,61031
void   HV_FADC_Obj::H_SetModuleDigitalFilter(uint32_t filter){H_SetModuleDigitalFilter1751,61136
float  HV_FADC_Obj::H_GetModuleVoltageLimit(void){H_GetModuleVoltageLimit1756,61250
float  HV_FADC_Obj::H_GetModuleCurrentLimit(void){H_GetModuleCurrentLimit1760,61351
uint32_t HV_FADC_Obj::H_GetModuleStatus(void){H_GetModuleStatus1765,61453
uint32_t HV_FADC_Obj::H_GetModuleEventStatus(void){H_GetModuleEventStatus1769,61544
void   HV_FADC_Obj::H_SetModuleEventStatus(uint32_t status){H_SetModuleEventStatus1773,61645
uint32_t HV_FADC_Obj::H_GetModuleEventChannelStatus(void){H_GetModuleEventChannelStatus1777,61754
void   HV_FADC_Obj::H_ClearModuleEventChannelStatus(void){H_ClearModuleEventChannelStatus1781,61869
uint32_t HV_FADC_Obj::H_GetModuleEventChannelMask(void){H_GetModuleEventChannelMask1785,61979
void   HV_FADC_Obj::H_SetModuleEventChannelMask(uint32_t mask){H_SetModuleEventChannelMask1789,62090
uint32_t HV_FADC_Obj::H_GetModuleEventGroupStatus(void){H_GetModuleEventGroupStatus1793,62205
uint32_t HV_FADC_Obj::HV_FADC_Obj::H_GetModuleEventGroupMask(void){H_GetModuleEventGroupMask1797,62316
void   HV_FADC_Obj::H_SetModuleEventGroupMask(uint32_t mask){H_SetModuleEventGroupMask1801,62436
void   HV_FADC_Obj::H_ClearModuleEventGroupStatus(void){H_ClearModuleEventGroupStatus1805,62547
uint32_t HV_FADC_Obj::H_GetModuleEventMask(void){H_GetModuleEventMask1809,62653
void   HV_FADC_Obj::H_SetModuleEventMask(uint32_t mask){H_SetModuleEventMask1813,62750
uint32_t HV_FADC_Obj::H_GetModuleControl(void){H_GetModuleControl1817,62851
void   HV_FADC_Obj::H_SetModuleControl(uint32_t control){H_SetModuleControl1821,62944
float  HV_FADC_Obj::H_GetModuleVoltageRampSpeed(void){H_GetModuleVoltageRampSpeed1826,63048
void   HV_FADC_Obj::H_SetModuleVoltageRampSpeed(float vramp){H_SetModuleVoltageRampSpeed1830,63157
float  HV_FADC_Obj::H_GetModuleCurrentRampSpeed(void){H_GetModuleCurrentRampSpeed1834,63271
void   HV_FADC_Obj::H_SetModuleCurrentRampSpeed(float iramp){H_SetModuleCurrentRampSpeed1838,63380
bool   HV_FADC_Obj::H_GetModuleKillEnable(void){H_GetModuleKillEnable1843,63495
void   HV_FADC_Obj::H_SetModuleKillEnable(bool enable){H_SetModuleKillEnable1847,63592
int    HV_FADC_Obj::H_GetModuleChannelNumber(void){H_GetModuleChannelNumber1852,63696
void   HV_FADC_Obj::H_SetModuleEmergencyOff(void){H_SetModuleEmergencyOff1857,63800
void   HV_FADC_Obj::H_ClearModuleEmergencyOff(void){H_ClearModuleEmergencyOff1861,63894
uint32_t HV_FADC_Obj::H_GetModuleRestartTime(void){H_GetModuleRestartTime1866,63993
void   HV_FADC_Obj::H_SetModuleRestartTime(uint32_t restartTime){H_SetModuleRestartTime1870,64094
void   HV_FADC_Obj::H_SetAllChannelsOn(void){H_SetAllChannelsOn1875,64214
void   HV_FADC_Obj::H_SetAllChannelsOff(void){H_SetAllChannelsOff1879,64298
void   HV_FADC_Obj::H_SetAllChannelsVoltageSet(float vset){H_SetAllChannelsVoltageSet1883,64384
void   HV_FADC_Obj::H_SetAllChannelsCurrentSet(float iset){H_SetAllChannelsCurrentSet1887,64494
uint32_t HV_FADC_Obj::H_GetChannelStatus(int channel){H_GetChannelStatus1893,64684
uint32_t HV_FADC_Obj::H_GetChannelEventStatus(int channel){H_GetChannelEventStatus1897,64791
void   HV_FADC_Obj::H_SetChannelEventStatus(int channel, uint32_t status){H_SetChannelEventStatus1901,64908
uint32_t HV_FADC_Obj::H_GetChannelEventMask(int channel){H_GetChannelEventMask1905,65041
void   HV_FADC_Obj::H_SetChannelEventMask(int channel, uint32_t mask){H_SetChannelEventMask1909,65154
uint32_t HV_FADC_Obj::H_GetChannelControl(int channel){H_GetChannelControl1913,65279
void   HV_FADC_Obj::H_SetChannelControl(int channel, uint32_t control){H_SetChannelControl1917,65388
void HV_FADC_Obj::H_SetChannelEmergencyOff(int channel){H_SetChannelEmergencyOff1921,65515
void   HV_FADC_Obj::H_ClearChannelEmergencyOff(int channel){H_ClearChannelEmergencyOff1925,65623
float  HV_FADC_Obj::H_GetChannelVoltageNominal(int channel){H_GetChannelVoltageNominal1930,65738
float  HV_FADC_Obj::H_GetChannelCurrentNominal(int channel){H_GetChannelCurrentNominal1934,65859
float  HV_FADC_Obj::H_GetChannelVoltageSet(int channel){H_GetChannelVoltageSet1939,65981
void   HV_FADC_Obj::H_SetChannelVoltageSet(int channel, float vset){H_SetChannelVoltageSet1943,66094
float  HV_FADC_Obj::H_GetChannelVoltageMeasure(int channel){H_GetChannelVoltageMeasure1947,66218
float  HV_FADC_Obj::H_GetChannelCurrentSet(int channel){H_GetChannelCurrentSet1951,66339
void   HV_FADC_Obj::H_SetChannelCurrentSet(int channel, float iset){H_SetChannelCurrentSet1955,66452
float  HV_FADC_Obj::H_GetChannelCurrentMeasure(int channel){H_GetChannelCurrentMeasure1959,66576
float  HV_FADC_Obj::H_GetChannelVoltageIlkMaxSet(int channel){H_GetChannelVoltageIlkMaxSet1964,66698
void   HV_FADC_Obj::H_SetChannelVoltageIlkMaxSet(int channel, float ilkmax){H_SetChannelVoltageIlkMaxSet1968,66823
float  HV_FADC_Obj::H_GetChannelVoltageIlkMinSet(int channel){H_GetChannelVoltageIlkMinSet1972,66963
void   HV_FADC_Obj::H_SetChannelVoltageIlkMinSet(int channel, float ilkmin){H_SetChannelVoltageIlkMinSet1976,67088
float  HV_FADC_Obj::H_GetChannelCurrentIlkMaxSet(int channel){H_GetChannelCurrentIlkMaxSet1981,67229
void   HV_FADC_Obj::H_SetChannelCurrentIlkMaxSet(int channel, float ilkmax){H_SetChannelCurrentIlkMaxSet1985,67354
float  HV_FADC_Obj::H_GetChannelCurrentIlkMinSet(int channel){H_GetChannelCurrentIlkMinSet1989,67494
void   HV_FADC_Obj::H_SetChannelCurrentIlkMinSet(int channel, float ilkmin){H_SetChannelCurrentIlkMinSet1993,67619
void   HV_FADC_Obj::H_SetChannelOn(int channel){H_SetChannelOn1998,67760
void   HV_FADC_Obj::H_SetChannelOff(int channel){H_SetChannelOff2002,67850
QString HV_FADC_Obj::H_FormatVoltage(double v){H_FormatVoltage2008,68022
QString HV_FADC_Obj::H_FormatVoltageUnit(double v){H_FormatVoltageUnit2012,68113
QString HV_FADC_Obj::H_GetVoltageUnit(void){H_GetVoltageUnit2016,68212
QString HV_FADC_Obj::H_FormatCurrent(double i){H_FormatCurrent2021,68301
QString HV_FADC_Obj::H_FormatCurrentUnit(double i){H_FormatCurrentUnit2025,68392
QString HV_FADC_Obj::H_GetCurrentUnit(void){H_GetCurrentUnit2029,68491
uint32_t HV_FADC_Obj::H_GetModuleIlkOutStatus(void){H_GetModuleIlkOutStatus2035,68659
uint32_t HV_FADC_Obj::H_GetModuleIlkOutControl(void){H_GetModuleIlkOutControl2039,68762
void   HV_FADC_Obj::H_SetModuleIlkOutControl(uint32_t control){H_SetModuleIlkOutControl2043,68867
uint32_t HV_FADC_Obj::H_GetModuleIlkOutCount(void){H_GetModuleIlkOutCount2047,68982
uint32_t HV_FADC_Obj::H_GetModuleIlkOutLastTrigger(void){H_GetModuleIlkOutLastTrigger2051,69083
uint32_t HV_FADC_Obj::H_GetModuleIlkOutChnActualActive(void){H_GetModuleIlkOutChnActualActive2055,69196
uint32_t HV_FADC_Obj::H_GetModuleIlkOutChnEverTriggered(void){H_GetModuleIlkOutChnEverTriggered2059,69317
uint32_t HV_FADC_Obj::H_GetModuleFlexGroupMemberList(int group){H_GetModuleFlexGroupMemberList2065,69520
void   HV_FADC_Obj::H_SetModuleFlexGroupMemberList(int group, uint32_t member){H_SetModuleFlexGroupMemberList2069,69647
uint32_t HV_FADC_Obj::H_GetModuleFlexGroupType(int group){H_GetModuleFlexGroupType2073,69790
void   HV_FADC_Obj::H_SetModuleFlexGroupType(int group, uint32_t type){H_SetModuleFlexGroupType2077,69905
float  HV_FADC_Obj::H_GetChannelVoltageHardwareNominal(int channel){H_GetChannelVoltageHardwareNominal2082,70033
void   HV_FADC_Obj::H_SetChannelVoltageNominal(int channel, float maxset){H_SetChannelVoltageNominal2086,70170
float  HV_FADC_Obj::H_GetChannelCurrentHardwareNominal(int channel){H_GetChannelCurrentHardwareNominal2090,70306
void   HV_FADC_Obj::H_SetChannelCurrentNominal(int channel, float maxset){H_SetChannelCurrentNominal2094,70443
void   HV_FADC_Obj::H_SetModuleSpecialControlCommand(uint32_t command){H_SetModuleSpecialControlCommand2100,70659
uint32_t HV_FADC_Obj::H_GetModuleSpecialControlCommand(void){H_GetModuleSpecialControlCommand2104,70790
uint32_t HV_FADC_Obj::H_GetModuleSpecialControlStatus(void){H_GetModuleSpecialControlStatus2108,70911
void   HV_FADC_Obj::H_SendHexLine(QByteArray record){H_SendHexLine2112,71030
void   HV_FADC_Obj::H_ProgramModuleBaseAddress(uint16_t address){H_ProgramModuleBaseAddress2116,71123
uint16_t HV_FADC_Obj::H_VerifyModuleBaseAddress(void){H_VerifyModuleBaseAddress2120,71242

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/src/caseFunctions.cc,492
void printGeneralCommands(bool fadcActive)printGeneralCommands8,79
void printTosCommands(bool fadcActive)printTosCommands31,1162
void printFadcCommands()printFadcCommands115,6174
int getInputValue()getInputValue165,8733
unsigned int getLongInputValue()getLongInputValue186,9193
unsigned short getShortInputValue()getShortInputValue206,9658
template<class T> T getAllInputValue(T err)getAllInputValue227,10203
int turnString2Int(std::string inputString)turnString2Int248,10695

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/src/fpga.cpp,2220
FPGA::FPGA():FPGA18,780
    #define SOCKET_BUFFER_SIZE_POINTER SOCKET_BUFFER_SIZE_POINTER95,3102
FPGA::~FPGA(){~FPGA182,5447
void FPGA::SetIP(std::string ip_){SetIP190,5559
std::string FPGA::ShowIP(){ShowIP195,5610
void FPGA::MakeARPEntry(){MakeARPEntry200,5657
int FPGA::okay(){okay213,5915
int FPGA::GeneralReset(){GeneralReset221,6021
int FPGA::Counting(){Counting237,6451
int FPGA::CountingStop(){CountingStop254,6925
int FPGA::CountingTrigger(int time){CountingTrigger273,7568
int FPGA::CountingTime(int time, int modeSelector){CountingTime297,8241
int FPGA::SetMatrix(){SetMatrix340,9619
int FPGA::WriteReadFSR(){WriteReadFSR385,10954
int FPGA::i2creset()i2creset421,12136
int FPGA::i2cDAC(unsigned short Umv, unsigned short DACchannel)i2cDAC434,12377
int FPGA::i2cADC(unsigned short channel)i2cADC452,12883
int FPGA::tpulse(unsigned short Npulses, unsigned short div500kHz)tpulse478,13496
int FPGA::EnableTPulse(int tpulse){EnableTPulse493,13860
int FPGA::EnableFADCshutter(unsigned short FADCshutter)EnableFADCshutter514,14288
int FPGA::Communication(char* SendBuffer, char* RecvBuffer)Communication548,15126
int FPGA::ReadoutFadcBit(){ReadoutFadcBit653,18289
int FPGA::ReadoutFadcFlag(){ReadoutFadcFlag662,18480
void FPGA::ClearFadcFlag(){ClearFadcFlag677,18665
int FPGA::Communication2(char* SendBuffer, char* RecvBuffer, int HitsMode, unsigned short chip)Communication2687,18828
int FPGA::CommunicationReadSend(char* SendBuffer, char* RecvBuffer, int HitsMode, unsigned short chip)CommunicationReadSend810,22464
int FPGA::SaveData(const char* filename){SaveData937,26298
int FPGA::SaveData(int pix[9][256][256]){SaveData978,27196
int FPGA::SaveData(std::vector<std::vector<std::vector<int> > > *VecData){SaveData1019,28410
int FPGA::SaveData(int pix[256][256], int NumHits){SaveData1053,29583
int FPGA::SaveData(std::vector<int> *pHitArray, int NumHits ){SaveData1098,30786
int FPGA::SaveData(int hit_x_y_val[12288] ,int NumHits){SaveData1149,32354
int FPGA::SaveData(int **pix){SaveData1195,33698
int FPGA::SwitchTriggerConnection(int connection){SwitchTriggerConnection1223,34178
void FPGA::UseFastClock(bool use){UseFastClock1231,34397

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/src/pc.cpp,4390
PC::PC():_useHvFadc(false),PC17,753
void PC::initHV_FADC(HV_FADC_Obj* hvFadcObj, bool useHvFadc)initHV_FADC152,4167
int PC::okay(){okay177,4586
int PC::DoReadOut(const char* filename[9]){DoReadOut184,4681
int PC::DoReadOut2(const char* filename, unsigned short chip){DoReadOut2220,5881
int PC::DoDACScan(int DACstoScan,unsigned short chip) {DoDACScan246,6736
int PC::DoTHLScan(unsigned short chip,unsigned short coarselow, unsigned short coarsehigh){DoTHLScan323,8867
int PC::DoSCurveScan_meanChip(unsigned short voltage,int time, unsigned short startTHL[9], unsigned short stopTHL[9], unsigned short offset){DoSCurveScan_meanChip352,9712
int PC::DoSCurveScan(unsigned short chip,unsigned short coarselow, unsigned short coarsehigh, int time){DoSCurveScan482,14524
void PC::DACScanHistogram(void* PointerToObject, char dac, int bit, int val){DACScanHistogram561,17221
int PC::THscan(unsigned int coarse, int thl, int array_pos, short ths, unsigned int step, unsigned short pix_per_row, short ***p3DArray, int sum[256][256], int hit_counter[256][256], short thp, unsigned short chp){THscan573,17600
int PC::DoTHSopt(unsigned short doTHeq,unsigned short pix_per_row_THeq,unsigned short chp,short ths,short ext_coarse,short max_thl,short min_thl){ //untill now only one chip at same timeDoTHSopt627,19722
		#define x_length x_length634,20022
		#define y_length y_length635,20045
		#define thl_length thl_length636,20068
int PC::DoThresholdEqCenter(unsigned short pix_per_row, unsigned short chp, short ext_coarse, short max_thl, short min_thl){DoThresholdEqCenter947,31097
	#define x_length x_length953,31338
	#define y_length y_length954,31360
	#define thl_length thl_length955,31382
int PC::TOCalibFast(unsigned short pix_per_row, unsigned short shuttertype, unsigned short time, unsigned short TOT, unsigned short internalPulser){TOCalibFast1389,46820
int PC::TOCalib(){TOCalib1642,58479
unsigned short PC::CheckOffset(){CheckOffset1879,69080
void PC::Histogramm(int hist[16384], int pix[256][256], int* m, int* s, int* a){Histogramm1934,70842
void PC::Histogramm(int hist[16384], int pix[256][256], int* m, int* s, int* a, int* sup ){Histogramm1963,71468
void PC::Histogramm(int hist[16384], int pix[256][256], int* m, int* s, int* a, int* sup, int* inf ){Histogramm1994,72168
int PC::DoRun(unsigned short runtimeFrames_, DoRun2029,73106
void PC::StopRun(){StopRun2159,76681
bool PC::IsRunning()IsRunning2167,76774
void PC::run()run2178,76909
void PC::runFADC()runFADC2198,77208
void PC::runOTPX()runOTPX2234,78013
void PC::readoutFadc(std::string filePath, std::vector<int> fadcParams, std::vector<int> *chipData, std::vector<int>fadcData)readoutFadc2361,81562
bool PC::SetDataPathName(std::string DataPath){SetDataPathName2489,85615
bool PC::SetDataFileName(std::string DataFile){SetDataFileName2493,85703
bool PC::SetRunFileName(std::string RunFile){SetRunFileName2497,85791
bool PC::SetFSRFileName(std::string FSRFile){SetFSRFileName2501,85875
bool PC::SetMatrixFileName(std::string MatrixFile){SetMatrixFileName2505,85959
bool PC::SetDACScanFileName(std::string DACScanFile){SetDACScanFileName2509,86055
bool PC::SetThresholdFileName(std::string ThresholdFile){SetThresholdFileName2513,86155
bool PC::SetMaskFileName(std::string MaskFile){SetMaskFileName2517,86263
const char* PC::GetTOSPathName(){GetTOSPathName2521,86351
const char* PC::GetDataPathName(){GetDataPathName2524,86416
const char* PC::GetDataFileName(unsigned short chip){GetDataFileName2527,86483
const char* PC::GetRunFileName(){GetRunFileName2539,86970
const char* PC::GetFSRFileName(unsigned short chip){GetFSRFileName2542,87035
const char* PC::GetMatrixFileName(unsigned short chip){GetMatrixFileName2553,87512
const char* PC::GetDACScanFileName(){GetDACScanFileName2564,88016
const char* PC::GetThresholdFileName(unsigned short chip){GetThresholdFileName2567,88089
const char* PC::GetTOTCalibFileName(unsigned short chip){GetTOTCalibFileName2578,88620
const char* PC::GetTOACalibFileName(unsigned short chip){GetTOACalibFileName2590,89143
const char* PC::GetMaskFileName(unsigned short chip){GetMaskFileName2602,89666
void PC::MakeBMP(int arr[256][256]){MakeBMP2615,90154
void PC::MakeBMP(int **arr){MakeBMP2663,91778
void PC::SpeedTest(int wdh, int freq){ //outdated, not used any moreSpeedTest2710,93393

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/src/tos.cpp,108
const WORD MAX_CONSOLE_LINES = 500;MAX_CONSOLE_LINES35,1601
int main(int argc, char *argv[])main38,1645

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/src/gui.cpp,134
GUI::GUI(){GUI14,751
void GUI::WrapperToDACScanLive(void* PointerToObject, char dac, int i, int value){WrapperToDACScanLive21,834

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/src/V1729a_VME.cc,3939
V1729a_VME::V1729a_VME( CVmUsb *Controller, int sAddress ): vme::DeviceVME( Controller, VME_OFFSET * sAddress ){}V1729a_VME5,35
inline void V1729a_VME::reset() throw() reset19,427
inline void V1729a_VME::startAcquisition() throw() startAcquisition25,505
unsigned int V1729a_VME::getFrequency() throw() getFrequency33,711
void V1729a_VME::setFrequency( const unsigned short& frequency ) throw() setFrequency40,831
void V1729a_VME::setReadMode( const unsigned short& mode ) throw() setReadMode47,1024
unsigned int V1729a_VME::getReadMode() throw() getReadMode54,1204
unsigned int V1729a_VME::getFPGAVersion() throw() getFPGAVersion61,1352
inline void V1729a_VME::setTriggerThresholdDACAll(const unsigned int threshold) throw() setTriggerThresholdDACAll72,1503
inline unsigned int V1729a_VME::getTriggerThresholdDACAll() throw() getTriggerThresholdDACAll81,1878
inline void V1729a_VME::setTriggerThresholdDACPerChannel(const unsigned short chNb, setTriggerThresholdDACPerChannel91,2254
inline unsigned int V1729a_VME::getTriggerThresholdDACPerChannel(const unsigned short chNb) throw() getTriggerThresholdDACPerChannel102,2759
inline void V1729a_VME::loadTriggerThresholdDAC() throw()loadTriggerThresholdDAC114,3247
inline unsigned int V1729a_VME::getTriggerRecord() throw() getTriggerRecord122,3492
inline void V1729a_VME::sendSoftwareTrigger() throw() sendSoftwareTrigger130,3636
void V1729a_VME::setPretrig( const unsigned short& bits ) throw() {setPretrig137,3816
unsigned short V1729a_VME::getPretrig() throw() {getPretrig148,4054
void V1729a_VME::setPosttrig( const unsigned short& bits ) throw() {setPosttrig161,4331
unsigned int V1729a_VME::getPosttrig() throw() getPosttrig173,4620
inline void V1729a_VME::setTriggerType( const unsigned short& type ) throw() setTriggerType184,4864
inline unsigned short V1729a_VME::getTriggerType() throw() getTriggerType192,5068
inline void V1729a_VME::setTriggerChannelSource( const unsigned short& mask ) throw() setTriggerChannelSource200,5267
inline unsigned short V1729a_VME::getTriggerChannelSource() throw() getTriggerChannelSource208,5452
inline unsigned short V1729a_VME::getModeRegister() throw()getModeRegister220,5640
inline void V1729a_VME::setModeRegister(const unsigned short& mode) throw()setModeRegister227,5759
inline void V1729a_VME::setColToRead( const unsigned short& col ) throw() {setColToRead234,5922
inline unsigned short V1729a_VME::getColToRead() throw() getColToRead241,6093
inline void V1729a_VME::setChannelMask( const unsigned short& mask ) throw() setChannelMask248,6245
inline unsigned short V1729a_VME::getChannelMask() throw() getChannelMask255,6401
void V1729a_VME::setNbOfChannels(const unsigned short& nbOfChannels) throw()setNbOfChannels261,6511
inline unsigned short V1729a_VME::getNbOfChannels() throw()getNbOfChannels268,6695
void V1729a_VME::setPostStopLatency( const unsigned short& latency ) throw() setPostStopLatency275,6832
unsigned short V1729a_VME::getPostStopLatency() throw() { getPostStopLatency282,6996
void V1729a_VME::setPostLatencyPretrig( const unsigned short& latency ) throw() {setPostLatencyPretrig289,7138
unsigned short V1729a_VME::getPostLatencyPretrig() throw() {getPostLatencyPretrig296,7308
void V1729a_VME::setRAMAddress( const unsigned short& add ) throw() {setRAMAddress303,7470
unsigned short V1729a_VME::getRAMAddress() throw() { getRAMAddress316,7736
std::vector<int> V1729a_VME::getAllData( const unsigned short& nbChannels) throw() getAllData330,8042
std::vector<int> V1729a_VME::getAllDataBlockMode() throw() getAllDataBlockMode358,8719
int V1729a_VME::getDataAt( const unsigned short& add ) throw(){getDataAt415,10248
inline void V1729a_VME::releaseInterrupt() throw() releaseInterrupt435,10515
bool V1729a_VME::readDeviceInterrupt() throw() readDeviceInterrupt443,10686
bool V1729a_VME::readInterrupt() throw() readInterrupt452,10895

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/src/vmemodule.cpp,9805
	long    l;l6,60
	float   f;f7,72
	uint16_t  w[2];w8,84
	uint8_t   b[4];b9,101
} TFloatWord;TFloatWord10,118
CVmeModule::CVmeModule(CVmeController *vmeController, int baseAddress)CVmeModule12,133
CVmeModule::~CVmeModule()~CVmeModule30,475
uint16_t CVmeModule::readShort(int address)readShort37,547
void CVmeModule::writeShort(int address, uint16_t data)writeShort42,657
uint16_t CVmeModule::readShortBitfield(int address)readShortBitfield47,779
void CVmeModule::writeShortBitfield(int address, uint16_t data)writeShortBitfield52,864
float CVmeModule::readFloat(int address)readFloat57,961
void CVmeModule::writeFloat(int address, float data)writeFloat72,1252
uint32_t CVmeModule::readLong(int address)readLong88,1534
void CVmeModule::writeLong(int address, uint32_t data)writeLong103,1827
uint32_t CVmeModule::readLongBitfield(int address)readLongBitfield119,2111
void CVmeModule::writeLongBitfield(int address, uint32_t data)writeLongBitfield124,2194
uint16_t CVmeModule::mirrorShort(uint16_t data)mirrorShort132,2344
uint32_t CVmeModule::mirrorLong(uint32_t data)mirrorLong148,2580
int CVmeModule::GetModuleDeviceClass(void)GetModuleDeviceClass166,2945
uint32_t CVmeModule::GetModulePlacedChannels(void)GetModulePlacedChannels372,11646
int CVmeModule::GetModuleSerialNumber(void)GetModuleSerialNumber384,11934
uint32_t CVmeModule::GetModuleFirmwareRelease(void)GetModuleFirmwareRelease396,12211
float CVmeModule::GetModuleTemperature(void)GetModuleTemperature408,12502
float CVmeModule::GetModuleSupplyP5(void)GetModuleSupplyP5420,12780
float CVmeModule::GetModuleSupplyP12(void)GetModuleSupplyP12432,13049
float CVmeModule::GetModuleSupplyN12(void)GetModuleSupplyN12444,13321
uint32_t CVmeModule::GetModuleAdcSamplesPerSecond(void)GetModuleAdcSamplesPerSecond456,13593
void CVmeModule::SetModuleAdcSamplesPerSecond(uint32_t sps)SetModuleAdcSamplesPerSecond468,13897
uint32_t CVmeModule::GetModuleDigitalFilter(void)GetModuleDigitalFilter479,14205
void CVmeModule::SetModuleDigitalFilter(uint32_t filter)SetModuleDigitalFilter491,14491
float CVmeModule::GetModuleVoltageLimit(void)GetModuleVoltageLimit502,14790
float CVmeModule::GetModuleCurrentLimit(void)GetModuleCurrentLimit514,15067
uint32_t CVmeModule::GetModuleStatus(void)GetModuleStatus527,15345
uint32_t CVmeModule::GetModuleEventStatus(void)GetModuleEventStatus539,15638
void CVmeModule::SetModuleEventStatus(uint32_t status)SetModuleEventStatus551,15946
uint32_t CVmeModule::GetModuleEventMask(void)GetModuleEventMask562,16253
void CVmeModule::SetModuleEventMask(uint32_t mask)SetModuleEventMask574,16555
uint32_t CVmeModule::GetModuleControl(void)GetModuleControl585,16850
void CVmeModule::SetModuleControl(uint32_t control)SetModuleControl597,17146
float CVmeModule::GetModuleVoltageRampSpeed(void)GetModuleVoltageRampSpeed608,17444
void CVmeModule::SetModuleVoltageRampSpeed(float vramp)SetModuleVoltageRampSpeed620,17737
float CVmeModule::GetModuleCurrentRampSpeed(void)GetModuleCurrentRampSpeed631,18040
void CVmeModule::SetModuleCurrentRampSpeed(float iramp)SetModuleCurrentRampSpeed643,18333
bool CVmeModule::GetModuleKillEnable(void)GetModuleKillEnable654,18636
void CVmeModule::SetModuleKillEnable(bool enable)SetModuleKillEnable662,18786
void CVmeModule::SetAllChannelsOn(void)SetAllChannelsOn672,18979
void CVmeModule::SetAllChannelsOff(void)SetAllChannelsOff683,19248
void CVmeModule::SetAllChannelsVoltageSet(float vset)SetAllChannelsVoltageSet694,19518
void CVmeModule::SetAllChannelsCurrentSet(float iset)SetAllChannelsCurrentSet705,19813
uint32_t CVmeModule::GetModuleRestartTime(void)GetModuleRestartTime716,20108
void CVmeModule::SetModuleRestartTime(uint32_t restartTime)SetModuleRestartTime727,20386
uint32_t CVmeModule::GetModuleEventChannelStatus(void)GetModuleEventChannelStatus738,20680
void CVmeModule::ClearModuleEventChannelStatus(void)ClearModuleEventChannelStatus749,21007
uint32_t CVmeModule::GetModuleEventChannelMask(void)GetModuleEventChannelMask760,21302
void CVmeModule::SetModuleEventChannelMask(uint32_t mask)SetModuleEventChannelMask771,21623
uint32_t CVmeModule::GetModuleEventGroupStatus(void)GetModuleEventGroupStatus782,21939
uint32_t CVmeModule::GetModuleEventGroupMask(void)GetModuleEventGroupMask793,22259
void CVmeModule::SetModuleEventGroupMask(uint32_t mask)SetModuleEventGroupMask804,22573
void CVmeModule::ClearModuleEventGroupStatus(void)ClearModuleEventGroupStatus815,22882
void CVmeModule::DoClear(void)DoClear826,23170
void CVmeModule::SetModuleBaseAddress(uint16_t ba)SetModuleBaseAddress835,23332
void CVmeModule::SetModuleSpecialControlCommand(uint32_t command)SetModuleSpecialControlCommand845,23648
uint32_t CVmeModule::GetModuleSpecialControlCommand(void)GetModuleSpecialControlCommand864,24126
uint32_t CVmeModule::GetModuleSpecialControlStatus(void)GetModuleSpecialControlStatus876,24436
void CVmeModule::SendHexLine(QByteArray record)SendHexLine888,24743
void CVmeModule::ProgramModuleBaseAddress(uint16_t address)ProgramModuleBaseAddress923,25659
uint16_t CVmeModule::VerifyModuleBaseAddress(void)VerifyModuleBaseAddress938,26102
uint32_t CVmeModule::GetChannelStatus(int channel)GetChannelStatus968,26878
uint32_t CVmeModule::GetChannelEventStatus(int channel)GetChannelEventStatus980,27231
void CVmeModule::SetChannelEventStatus(int channel, uint32_t status)SetChannelEventStatus992,27599
uint32_t CVmeModule::GetChannelEventMask(int channel)GetChannelEventMask1003,27972
void CVmeModule::SetChannelEventMask(int channel, uint32_t mask)SetChannelEventMask1015,28334
uint32_t CVmeModule::GetChannelControl(int channel)GetChannelControl1026,28695
void CVmeModule::SetChannelControl(int channel, uint32_t control)SetChannelControl1038,29051
float CVmeModule::GetChannelVoltageNominal(int channel)GetChannelVoltageNominal1049,29415
float CVmeModule::GetChannelCurrentNominal(int channel)GetChannelCurrentNominal1061,29774
float CVmeModule::GetChannelVoltageSet(int channel)GetChannelVoltageSet1073,30133
void CVmeModule::SetChannelVoltageSet(int channel, float vset)SetChannelVoltageSet1085,30480
float CVmeModule::GetChannelVoltageMeasure(int channel)GetChannelVoltageMeasure1096,30826
float CVmeModule::GetChannelCurrentSet(int channel)GetChannelCurrentSet1108,31185
void CVmeModule::SetChannelCurrentSet(int channel, float iset)SetChannelCurrentSet1120,31532
float CVmeModule::GetChannelCurrentMeasure(int channel)GetChannelCurrentMeasure1131,31878
float CVmeModule::GetChannelVoltageIlkMaxSet(int channel)GetChannelVoltageIlkMaxSet1143,32237
void CVmeModule::SetChannelVoltageIlkMaxSet(int channel, float ilkmax)SetChannelVoltageIlkMaxSet1155,32602
float CVmeModule::GetChannelVoltageIlkMinSet(int channel)GetChannelVoltageIlkMinSet1166,32986
void CVmeModule::SetChannelVoltageIlkMinSet(int channel, float ilkmin)SetChannelVoltageIlkMinSet1178,33351
float CVmeModule::GetChannelCurrentIlkMaxSet(int channel)GetChannelCurrentIlkMaxSet1189,33735
void CVmeModule::SetChannelCurrentIlkMaxSet(int channel, float ilkmax)SetChannelCurrentIlkMaxSet1201,34100
float CVmeModule::GetChannelCurrentIlkMinSet(int channel)GetChannelCurrentIlkMinSet1212,34484
void CVmeModule::SetChannelCurrentIlkMinSet(int channel, float ilkmin)SetChannelCurrentIlkMinSet1224,34849
QString CVmeModule::FormatVoltage(double v)FormatVoltage1239,35327
QString CVmeModule::GetVoltageUnit(void)GetVoltageUnit1252,35555
QString CVmeModule::FormatVoltageUnit(double v)FormatVoltageUnit1267,35782
QString CVmeModule::FormatCurrent(double i)FormatCurrent1276,35999
QString CVmeModule::GetCurrentUnit(void)GetCurrentUnit1293,36322
QString CVmeModule::FormatCurrentUnit(double i)FormatCurrentUnit1312,36651
void CVmeModule::SetModuleEmergencyOff(void)SetModuleEmergencyOff1317,36776
void CVmeModule::ClearModuleEmergencyOff(void)ClearModuleEmergencyOff1328,37058
void CVmeModule::SetChannelOn(int channel)SetChannelOn1339,37342
void CVmeModule::SetChannelOff(int channel)SetChannelOff1348,37528
void CVmeModule::SetChannelEmergencyOff(int channel)SetChannelEmergencyOff1357,37715
void CVmeModule::ClearChannelEmergencyOff(int channel)ClearChannelEmergencyOff1366,37918
int CVmeModule::GetModuleChannelNumber(void)GetModuleChannelNumber1375,38123
uint32_t CVmeModule::GetModuleIlkOutStatus(void)GetModuleIlkOutStatus1380,38196
uint32_t CVmeModule::GetModuleIlkOutControl(void)GetModuleIlkOutControl1391,38456
void CVmeModule::SetModuleIlkOutControl(uint32_t control)SetModuleIlkOutControl1402,38719
uint32_t CVmeModule::GetModuleIlkOutCount(void)GetModuleIlkOutCount1413,38973
uint32_t CVmeModule::GetModuleIlkOutLastTrigger(void)GetModuleIlkOutLastTrigger1424,39220
uint32_t CVmeModule::GetModuleIlkOutChnActualActive(void)GetModuleIlkOutChnActualActive1435,39487
uint32_t CVmeModule::GetModuleIlkOutChnEverTriggered(void)GetModuleIlkOutChnEverTriggered1446,39762
uint32_t CVmeModule::GetModuleFlexGroupMemberList(int group)GetModuleFlexGroupMemberList1457,40039
void CVmeModule::SetModuleFlexGroupMemberList(int group, uint32_t member)SetModuleFlexGroupMemberList1468,40405
uint32_t CVmeModule::GetModuleFlexGroupType(int group)GetModuleFlexGroupType1479,40778
void CVmeModule::SetModuleFlexGroupType(int group, uint32_t type)SetModuleFlexGroupType1490,41134
float CVmeModule::GetChannelVoltageHardwareNominal(int channel)GetChannelVoltageHardwareNominal1501,41491
void CVmeModule::SetChannelVoltageNominal(int channel, float maxset)SetChannelVoltageNominal1511,41734
float CVmeModule::GetChannelCurrentHardwareNominal(int channel)GetChannelCurrentHardwareNominal1522,42112
void CVmeModule::SetChannelCurrentNominal(int channel, float maxset)SetChannelCurrentNominal1532,42355

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/src/High-Level-functions_VME.cc,1546
HighLevelFunction_VME::HighLevelFunction_VME(V1729a* dev):_currentDevice(dev),_nb(10),_triggerThresholdRegister(5,0)HighLevelFunction_VME7,78
HighLevelFunction_VME::~HighLevelFunction_VME()~HighLevelFunction_VME26,799
void HighLevelFunction_VME::printSettings()printSettings48,1579
int HighLevelFunction_VME::setFrequencyH(const unsigned short& frequency)setFrequencyH70,2936
int HighLevelFunction_VME::setPosttrigH(const unsigned short& bits)setPosttrigH89,3347
int HighLevelFunction_VME::setPretrigH(const unsigned short& bits)setPretrigH107,3741
int HighLevelFunction_VME::setTriggerTypeH( const unsigned short& type )setTriggerTypeH130,4177
int HighLevelFunction_VME::setTriggerChannelSourceH(const unsigned short& mask )setTriggerChannelSourceH148,4574
unsigned int HighLevelFunction_VME::setTriggerThresholdRegisterAll(const unsigned int threshold)setTriggerThresholdRegisterAll166,5045
void HighLevelFunction_VME::getTriggerThresholdRegister()getTriggerThresholdRegister185,5669
std::vector<std::vector<int> > HighLevelFunction_VME::correctData(std::vector<int> const& dataVec)correctData207,6481
void HighLevelFunction_VME::printDataToFile(std::vector<int> const& dataVec, std::string fileName)printDataToFile276,9158
void HighLevelFunction_VME::printDataToFile(std::vector<std::vector<int> > const& dataVec, std::string fileName)printDataToFile371,12413
void HighLevelFunction_VME::printDataToFileBlockMode(std::vector<std::vector<int> > const& dataVec, std::string fileName)printDataToFileBlockMode489,16593

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/src/vmusb.cpp,859
CVmUsb::CVmUsb()CVmUsb5,43
CVmUsb::~CVmUsb()~CVmUsb64,1810
bool CVmUsb::initController(int controllerNumber)initController93,2387
void CVmUsb::writeShort(int vmeAddress, int addressModifier, int data, int *errorCode)writeShort122,3021
int CVmUsb::readShort(int vmeAddress, int addressModifier, int *errorCode)readShort135,3285
void CVmUsb::writeLong(int vmeAddress, int addressModifier, int data, int *errorCode)writeLong151,3572
int CVmUsb::readLong(int vmeAddress, int addressModifier, int *errorCode)readLong164,3835
std::vector<int> CVmUsb::readBlock32( int addr, int nWords, int addrMod)readBlock32180,4121
bool CVmUsb::closeController(void)closeController227,5123
QString CVmUsb::errorString(void)errorString236,5242
QString CVmUsb::controllerName(void)controllerName241,5307
QString CVmUsb::information(void)information246,5379

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/src/console.cpp,3670
Console::Console():Console24,1221
Console::Console(std::string iniFilePath):Console53,1934
Console::~Console()~Console82,2586
unsigned short Console::getPreload()getPreload90,2671
int Console::okay(){okay106,3053
void Console::ConsoleMain(){ConsoleMain114,3165
void Console::CommandActivateHvFadcObj(){CommandActivateHvFadcObj131,3577
int Console::UserInterface(){UserInterface198,5717
int Console::ReadoutFpgaExtTriggerBit()ReadoutFpgaExtTriggerBit643,17953
int Console::ReadoutFpgaExtTriggerFlag()ReadoutFpgaExtTriggerFlag649,18034
void Console::ClearFpgaExtTriggerFlag()ClearFpgaExtTriggerFlag655,18117
void Console::ErrorMessages(int err){ErrorMessages661,18190
int Console::CommandHelp()CommandHelp832,23182
int Console::CommandSpacing(){CommandSpacing949,29164
int Console::CommandSetNumChips(){CommandSetNumChips964,29684
void Console::SetNumChips(int nChips){SetNumChips986,30258
int Console::CommandSetOption(){CommandSetOption1005,30962
int Console::CommandRun(bool useHvFadc){CommandRun1025,31464
int Console::CommandCounting(int c){CommandCounting1256,39303
std::string Console::TriggerSelection(){TriggerSelection1278,39872
std::string Console::FastClockSelection(){FastClockSelection1307,40905
std::string Console::ShutterRangeSelection(){ShutterRangeSelection1339,42009
std::string Console::ShutterTimeSelection(int n){ShutterTimeSelection1384,43717
int Console::CommandCountingTrigger(){CommandCountingTrigger1443,46037
int Console::CommandCountingTime(){CommandCountingTime1490,47509
int Console::CommandReadOut(){CommandReadOut1559,49668
int Console::CommandReadOut2(){CommandReadOut21581,50300
int Console::CommandSetMatrix(){CommandSetMatrix1605,50996
int Console::CommandSaveMatrix(){CommandSaveMatrix1616,51288
int Console::CommandLoadMatrix(){CommandLoadMatrix1639,51928
int Console::CommandWriteReadFSR(){CommandWriteReadFSR1671,52868
int Console::CommandSaveFSR(){CommandSaveFSR1685,53238
int Console::CommandLoadFSR(){CommandLoadFSR1708,53860
int Console::CommandLoadThreshold(){CommandLoadThreshold1759,55190
int Console::CommandSetDAC(){CommandSetDAC1798,56364
int Console::CommandShowFSR(){CommandShowFSR1836,57563
int Console::CommandVarChessMatrix(){CommandVarChessMatrix1846,57834
int Console::CommandUniformMatrix(){CommandUniformMatrix1918,60660
int Console::CommandFADCshutter(){CommandFADCshutter1958,62003
int Console::CommandDACScan(){CommandDACScan1978,62726
int Console::CommandTHLScan(){CommandTHLScan2068,66274
int Console::CommandSCurve(){CommandSCurve2093,67227
int Console::CommandSCurveFast(){CommandSCurveFast2124,68490
int Console::Commandi2creset(){Commandi2creset2174,70679
int Console::Commandi2cDAC(){Commandi2cDAC2180,70753
int Console::Commandi2cADC(){Commandi2cADC2199,71474
int Console::CommandTpulse(){CommandTpulse2213,71924
int Console::CommandDoTHSopt(){CommandDoTHSopt2232,72668
int Console::CommandThresholdEqNoiseCenter(){CommandThresholdEqNoiseCenter2331,75808
int Console::CommandTOCalib(){CommandTOCalib2403,78148
int Console::CommandTOCalibFast(){CommandTOCalibFast2409,78215
int Console::CommandCheckOffset(){CommandCheckOffset2482,80993
int Console::CommandCalibrate(){CommandCalibrate2489,81156
int Console::CommandSwitchTriggerConnection(){CommandSwitchTriggerConnection2704,88506
void Console::DACScanLive(char dac, int val){DACScanLive2727,89264
void Console::WrapperToDACScanLive(void* PointerToObject, char dac, int val){WrapperToDACScanLive2736,89524
void Console::CommandSpeedTest(std::string ein){CommandSpeedTest2745,89783
void Console::CommandSetIP(){CommandSetIP2765,90200

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/src/vmecontroller.cpp,656
CVmeController::CVmeController()CVmeController3,30
CVmeController::~CVmeController()~CVmeController7,72
bool CVmeController::initController(int controllerNumber)initController11,115
bool CVmeController::closeController(void)closeController16,197
void CVmeController::writeShort(int vmeAddress, int addressModifier, int data, int *errorCode)writeShort21,264
int CVmeController::readShort(int vmeAddress, int addressModifier, int *errorCode)readShort25,368
QString CVmeController::errorString(void)errorString30,472
QString CVmeController::controllerName(void)controllerName35,536
QString CVmeController::information(void)information40,603

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/src/timepix.cpp,4430
Timepix::Timepix(){Timepix15,756
int Timepix::GetFSR(char* FSR_){GetFSR107,3762
int Timepix::GetFSR(unsigned char* FSR_){GetFSR124,4114
int Timepix::LoadFSRFromFile(const char* filename, unsigned short chip){LoadFSRFromFile141,4528
int Timepix::SaveFSRToFile(const char* filename, unsigned short chip){SaveFSRToFile158,4976
int Timepix::SetDAC(unsigned int dac, unsigned short chip, unsigned int value){SetDAC173,5354
unsigned int Timepix::GetDAC(unsigned int dac, unsigned short chip){GetDAC190,5960
int Timepix::MaskPixel(int x, int y, int m, unsigned short chip){ //not used so farMaskPixel198,6169
int Timepix::GetMask(int y, int x, unsigned short chip){ //not used so farGetMask203,6361
int Timepix::Spacing(unsigned int space, unsigned int step, unsigned short chip){ //when using step must go from 0 to <space*spaceSpacing207,6465
int Timepix::SpacingCalib (unsigned int stepCTPR, unsigned int stepRow, unsigned int pix_per_row, unsigned short chip){ //only for TOcalib, matrix was set to all test, mask = 0SpacingCalib223,6803
int Timepix::Spacing_row (unsigned int step, unsigned int pix_per_row, unsigned short chip){ //step from 0 to <(256/pix_per_col), y are the rowSpacing_row235,7180
int Timepix::Spacing_row_TPulse (unsigned int step, unsigned int pix_per_row, unsigned short chip){ //step from 0 to <(256/pix_per_col), y are the rowSpacing_row_TPulse251,7616
int Timepix::IsCounting(){IsCounting268,8123
int Timepix::SetCounting(int counting){SetCounting275,8249
std::string Timepix::GetDACName(unsigned int dac){GetDACName283,8417
int Timepix::GetDACCode(unsigned int dac){GetDACCode291,8614
void Timepix::UpdateFSR(){UpdateFSR302,9079
void Timepix::SetFSRBit(int bit, bool b){SetFSRBit341,11564
int Timepix::ChipID(char* ReplyPacket, unsigned short chip){ChipID351,11994
int Timepix::ChipID(unsigned char* ReplyPacket, unsigned short chip){ChipID410,14297
bool Timepix::SetChipID(int id, std::string IDLetter,int IDNumber, int IDWaver, int chipType, unsigned short chip){SetChipID470,16774
int Timepix::GetChipID(unsigned short chip){GetChipID475,17075
int Timepix::GetChipIDsilent(unsigned short chip){GetChipIDsilent480,17345
int Timepix::SaveThresholdToFile(const char* filename, unsigned short chip){SaveThresholdToFile484,17422
int Timepix::LoadThresholdFromFile(const char* filename, unsigned short chip){LoadThresholdFromFile500,17802
int Timepix::SaveMatrixToFile(const char* filename,unsigned short Chip){SaveMatrixToFile515,18175
int Timepix::LoadMatrixFromFile(const char* filename, unsigned short chip){LoadMatrixFromFile534,18758
int Timepix::UniformMatrix(unsigned char P0_, unsigned char P1_, unsigned char Mask_, unsigned char Test_, unsigned char ThrH_, unsigned short Chip){UniformMatrix550,19249
int Timepix::VarChessMatrix(int sl,int wl,int sp0,int sp1,int smask,int stest,int sth,int wp0,int wp1,int wmask,int wtest,int wth, unsigned short Chip){VarChessMatrix567,19745
int Timepix::PackMatrix(std::vector<std::vector<char> > *PackQueue){PackMatrix596,20480
int Timepix::PackMatrix(std::vector<std::vector<unsigned char> > *PackQueue){PackMatrix635,22974
int Timepix::SetNumChips(unsigned short Chips,unsigned short preload){SetNumChips675,25644
int Timepix::SetOption(unsigned short option){SetOption681,25774
unsigned short Timepix::GetNumChips(){GetNumChips686,25861
unsigned short Timepix::GetPreload(){GetPreload690,25921
unsigned short Timepix::GetOption(){GetOption694,25986
int Timepix::SetI2C(unsigned int i2c_val){SetI2C698,26049
unsigned int Timepix::GetI2C(){GetI2C703,26130
int Timepix::SetADCresult(unsigned short ADC_ChAlert, unsigned short ADC_result){SetADCresult707,26185
int Timepix::GetI2cResult(){GetI2cResult714,26487
unsigned short Timepix::GetADCresult(){GetADCresult718,26546
unsigned short Timepix::GetADCchannel(){GetADCchannel721,26615
unsigned short Timepix::GetADCalert(){GetADCalert724,26686
unsigned short Timepix::SetFADCshutter(unsigned short FADCshutter){SetFADCshutter727,26753
unsigned short Timepix::GetFADCshutter(){GetFADCshutter730,26858
unsigned short Timepix::SetExtraByte(unsigned short ExtraByte){SetExtraByte733,26930
unsigned short Timepix::GetExtraByte(){GetExtraByte736,27027
unsigned short Timepix::SetFADCtriggered(unsigned short FADCtriggered){SetFADCtriggered739,27095
unsigned short Timepix::SetFADCtriggered(){SetFADCtriggered742,27208

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/src/DeviceVME.cc,552
namespace vme {vme16,176
    DeviceVME::DeviceVME( CVmUsb *Controller, int baseAddr )DeviceVME22,197
DeviceVME::~DeviceVME() {~DeviceVME33,378
int DeviceVME::read32( int addrOffset, int addrMod ){read3239,444
int DeviceVME::read16( int addrOffset, int addrMod ){read1650,719
void DeviceVME::write32( int data, int addrOffset, int addrMod ){write3260,917
void DeviceVME::write16( int data, int addrOffset, int addrMod ){write1670,1143
std::vector<int> DeviceVME::readBlock32( int addrOffset, int nWords, int addrMod ){readBlock3280,1363

/home/schmidt/HV_FADC/TOS_merged_V6_3_1_wV1729/Backup/Makefile,2110
CC            = gccCC11,382
CXX           = g++CXX12,402
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHAREDDEFINES13,422
CFLAGS        = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)CFLAGS14,491
CXXFLAGS      = -m64 -pipe -std=c++11 -o0 -g -Wall -W -pedantic -O2 -Wall -W -D_REENTRANT $(DEFINES)CXXFLAGS15,555
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -Iinclude -I../VME/src -I../VME/lib -I../FadcVMEReadout/src -I../FadcVMEReadout/lib -ItmpINCPATH16,656
LINK          = g++LINK17,878
LFLAGS        = -m64 -Wl,-O1LFLAGS18,898
LIBS          = $(SUBLIBS)  -L/home/schmidt/HV_FADC/VME/lib -L/home/schmidt/HV_FADC/FadcVMEReadout/lib -L/usr/lib/x86_64-linux-gnu -Wl,--no-as-needed -Wl,--rpath=/usr/local/lib -Wl,--rpath=/home/schmidt/HV_FADC/VME/lib -Wl,--rpath=/home/schmidt/HV_FADC/FadcVMEReadout/lib -Wl,--rpath=/usr/lib -lQtGui -lQtCore -lpthread LIBS19,927
AR            = ar cqsAR20,1248
RANLIB        = RANLIB21,1271
QMAKE         = /usr/bin/qmake-qt4QMAKE22,1288
TAR           = tar -cfTAR23,1323
COMPRESS      = gzip -9fCOMPRESS24,1347
COPY          = cp -fCOPY25,1372
SED           = sedSED26,1394
COPY_FILE     = $(COPY)COPY_FILE27,1414
COPY_DIR      = $(COPY) -rCOPY_DIR28,1438
STRIP         = stripSTRIP29,1465
INSTALL_FILE  = install -m 644 -pINSTALL_FILE30,1487
INSTALL_DIR   = $(COPY_DIR)INSTALL_DIR31,1521
INSTALL_PROGRAM = install -m 755 -pINSTALL_PROGRAM32,1549
DEL_FILE      = rm -fDEL_FILE33,1585
SYMLINK       = ln -f -sSYMLINK34,1607
DEL_DIR       = rmdirDEL_DIR35,1632
MOVE          = mv -fMOVE36,1654
CHK_DIR_EXISTS= test -dCHK_DIR_EXISTS37,1676
MKDIR         = mkdir -pMKDIR38,1700
OBJECTS_DIR   = tmp/OBJECTS_DIR42,1752
SOURCES       = src/caseFunctions.cc \SOURCES46,1789
OBJECTS       = tmp/caseFunctions.o \OBJECTS61,2126
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \DIST76,2437
QMAKE_TARGET  = TOSQMAKE_TARGET101,3636
DESTDIR       = bin/DESTDIR102,3656
TARGET        = bin/TOSTARGET103,3677
