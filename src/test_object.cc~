// This program is used to test
// the basic functionality of the HV_FADC_Obj

#include "HV_FADC_Obj.h"
#include "High-Level-functions_VME.h"
#include <iostream>
#include <string>
#include <cstdlib>

#include <QString>
#include <QTimer>
#include <QTime>
#include <QObject>

void update(HV_FADC_Obj *myHV_FADC_Obj){

    std::cout << "is connected next" << std::endl;
    std::cin.ignore();
    bool a = myHV_FADC_Obj->HV_module->IsConnected();
    std::cout << a << std::endl;

    myHV_FADC_Obj->FADC_module->startAcquisition();
    std::cin.ignore();
    myHV_FADC_Obj->FADC_module->reset();
//    int b = 0;
//    b = myHV_FADC_Obj->HV_module->GetModuleStatus();

//    QString s;
//    // access to HV module currently causes SegFault
//    myHV_FADC_Obj->HV_module->SetModuleCurrentRampSpeed(10.0);
//    int f = myHV_FADC_Obj->HV_module->GetModuleBaseAddress();
//    myHV_FADC_Obj->HV_module->GetModuleSerialNumber();
//    myHV_FADC_Obj->HV_module->GetModuleFirmwareRelease();
//    myHV_FADC_Obj->HV_module->GetModuleChannelNumber();

//    std::cout << f << std::endl;

//    s = myHV_FADC_Obj->Controller.initController(0);
//    std::cout << s.toStdString() << std::endl;
    

//    myHV_FADC_Obj->HV_module->GetModuleDeviceClass();
//    std::cout << "Is connected!!!" << a << std::endl;

//    std::cout << "Channel Number" << myHV_FADC_Obj->HV_module->GetModuleChannelNumber() << std::endl;
    
}


int main( int argc, char **argv ){

    // create a new HV_FADC_Obj
    int sAddress_fadc  = 1;
    uint16_t baseAddress_hv = 0x4400;

    HV_FADC_Obj *myHV_FADC_Obj = new HV_FADC_Obj(sAddress_fadc, baseAddress_hv);


    HighLevelFunction_VME* fadcFunctions = new  HighLevelFunction_VME(myHV_FADC_Obj->FADC_module);

    std::cout << "Trying to reset FADC" << std::endl;
    myHV_FADC_Obj->FADC_module->reset();

    fadcFunctions->printSettings();

    myHV_FADC_Obj->FADC_module->startAcquisition();

//    std::cin.ignore();

    myHV_FADC_Obj->FADC_module->reset();

    //QTimer* myTimer = new QTimer();
    //myTimer->setInterval(50);
    //connect(myTimer, SIGNAL(timeout()), myHV_FADC_Obj , SLOT(update(myHV_FADC_Obj)));
    
    while(true){
	update(myHV_FADC_Obj);
    }



    
    
    

    return 0;
}
